// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: radar.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_STATE_OFF           State = 0
	State_STATE_STANDBY       State = 1
	State_STATE_WARMING_UP    State = 2
	State_STATE_TIMED_IDLE    State = 3
	State_STATE_STOPPING      State = 4
	State_STATE_SPINNING_DOWN State = 5
	State_STATE_STARTING      State = 6
	State_STATE_SPINNING_UP   State = 7
	State_STATE_TRANSMIT      State = 8
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_OFF",
		1: "STATE_STANDBY",
		2: "STATE_WARMING_UP",
		3: "STATE_TIMED_IDLE",
		4: "STATE_STOPPING",
		5: "STATE_SPINNING_DOWN",
		6: "STATE_STARTING",
		7: "STATE_SPINNING_UP",
		8: "STATE_TRANSMIT",
	}
	State_value = map[string]int32{
		"STATE_OFF":           0,
		"STATE_STANDBY":       1,
		"STATE_WARMING_UP":    2,
		"STATE_TIMED_IDLE":    3,
		"STATE_STOPPING":      4,
		"STATE_SPINNING_DOWN": 5,
		"STATE_STARTING":      6,
		"STATE_SPINNING_UP":   7,
		"STATE_TRANSMIT":      8,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_radar_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_radar_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{0}
}

type CommandType int32

const (
	CommandType_COMMAND_NONE      CommandType = 0 // value ignored
	CommandType_COMMAND_TURN_ON   CommandType = 1 // value ignored
	CommandType_COMMAND_TURN_OFF  CommandType = 2 // value ignored
	CommandType_COMMAND_SET_RANGE CommandType = 3 // value is range in meters
	CommandType_COMMAND_SET_GAIN  CommandType = 4
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "COMMAND_NONE",
		1: "COMMAND_TURN_ON",
		2: "COMMAND_TURN_OFF",
		3: "COMMAND_SET_RANGE",
		4: "COMMAND_SET_GAIN",
	}
	CommandType_value = map[string]int32{
		"COMMAND_NONE":      0,
		"COMMAND_TURN_ON":   1,
		"COMMAND_TURN_OFF":  2,
		"COMMAND_SET_RANGE": 3,
		"COMMAND_SET_GAIN":  4,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_radar_proto_enumTypes[1].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_radar_proto_enumTypes[1]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{1}
}

type Pose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatDeg        float64                `protobuf:"fixed64,1,opt,name=lat_deg,json=latDeg,proto3" json:"lat_deg,omitempty"`
	LonDeg        float64                `protobuf:"fixed64,2,opt,name=lon_deg,json=lonDeg,proto3" json:"lon_deg,omitempty"`
	HeadingDeg    float32                `protobuf:"fixed32,3,opt,name=heading_deg,json=headingDeg,proto3" json:"heading_deg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pose) Reset() {
	*x = Pose{}
	mi := &file_radar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pose) ProtoMessage() {}

func (x *Pose) ProtoReflect() protoreflect.Message {
	mi := &file_radar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pose.ProtoReflect.Descriptor instead.
func (*Pose) Descriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{0}
}

func (x *Pose) GetLatDeg() float64 {
	if x != nil {
		return x.LatDeg
	}
	return 0
}

func (x *Pose) GetLonDeg() float64 {
	if x != nil {
		return x.LonDeg
	}
	return 0
}

func (x *Pose) GetHeadingDeg() float32 {
	if x != nil {
		return x.HeadingDeg
	}
	return 0
}

type Spokes struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NumSpoke        uint32                 `protobuf:"varint,1,opt,name=num_spoke,json=numSpoke,proto3" json:"num_spoke,omitempty"` // total number of spokes in one complete scan
	FirstSpokeIndex uint32                 `protobuf:"varint,2,opt,name=first_spoke_index,json=firstSpokeIndex,proto3" json:"first_spoke_index,omitempty"`
	RangeM          float32                `protobuf:"fixed32,3,opt,name=range_m,json=rangeM,proto3" json:"range_m,omitempty"`
	Spokes          [][]byte               `protobuf:"bytes,4,rep,name=spokes,proto3" json:"spokes,omitempty"` // contains multiple spokes. each spoke is a byte
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Spokes) Reset() {
	*x = Spokes{}
	mi := &file_radar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spokes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spokes) ProtoMessage() {}

func (x *Spokes) ProtoReflect() protoreflect.Message {
	mi := &file_radar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spokes.ProtoReflect.Descriptor instead.
func (*Spokes) Descriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{1}
}

func (x *Spokes) GetNumSpoke() uint32 {
	if x != nil {
		return x.NumSpoke
	}
	return 0
}

func (x *Spokes) GetFirstSpokeIndex() uint32 {
	if x != nil {
		return x.FirstSpokeIndex
	}
	return 0
}

func (x *Spokes) GetRangeM() float32 {
	if x != nil {
		return x.RangeM
	}
	return 0
}

func (x *Spokes) GetSpokes() [][]byte {
	if x != nil {
		return x.Spokes
	}
	return nil
}

type Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TtagSteadyNs  uint64                 `protobuf:"varint,9,opt,name=ttag_steady_ns,json=ttagSteadyNs,proto3" json:"ttag_steady_ns,omitempty"`
	State         State                  `protobuf:"varint,2,opt,name=state,proto3,enum=magothy.protobuf.radar.State" json:"state,omitempty"`
	Gain          int32                  `protobuf:"varint,3,opt,name=gain,proto3" json:"gain,omitempty"`
	Rain          int32                  `protobuf:"varint,4,opt,name=rain,proto3" json:"rain,omitempty"`
	Sea           int32                  `protobuf:"varint,5,opt,name=sea,proto3" json:"sea,omitempty"`
	Range         int32                  `protobuf:"varint,6,opt,name=range,proto3" json:"range,omitempty"`
	ScanSpeed     int32                  `protobuf:"varint,7,opt,name=scan_speed,json=scanSpeed,proto3" json:"scan_speed,omitempty"`
	Spokes        *Spokes                `protobuf:"bytes,8,opt,name=spokes,proto3,oneof" json:"spokes,omitempty"`
	Pose          *Pose                  `protobuf:"bytes,10,opt,name=pose,proto3,oneof" json:"pose,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_radar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_radar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{2}
}

func (x *Info) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Info) GetTtagSteadyNs() uint64 {
	if x != nil {
		return x.TtagSteadyNs
	}
	return 0
}

func (x *Info) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_OFF
}

func (x *Info) GetGain() int32 {
	if x != nil {
		return x.Gain
	}
	return 0
}

func (x *Info) GetRain() int32 {
	if x != nil {
		return x.Rain
	}
	return 0
}

func (x *Info) GetSea() int32 {
	if x != nil {
		return x.Sea
	}
	return 0
}

func (x *Info) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *Info) GetScanSpeed() int32 {
	if x != nil {
		return x.ScanSpeed
	}
	return 0
}

func (x *Info) GetSpokes() *Spokes {
	if x != nil {
		return x.Spokes
	}
	return nil
}

func (x *Info) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       CommandType            `protobuf:"varint,1,opt,name=command,proto3,enum=magothy.protobuf.radar.CommandType" json:"command,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_radar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_radar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_radar_proto_rawDescGZIP(), []int{3}
}

func (x *Command) GetCommand() CommandType {
	if x != nil {
		return x.Command
	}
	return CommandType_COMMAND_NONE
}

func (x *Command) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_radar_proto protoreflect.FileDescriptor

var file_radar_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x72, 0x61, 0x64, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d,
	0x61, 0x67, 0x6f, 0x74, 0x68, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x61, 0x74, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x6e, 0x44, 0x65, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x67, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x53, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x6f, 0x6b, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x6b, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x22, 0x92, 0x03, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x74, 0x61,
	0x67, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x74, 0x74, 0x61, 0x67, 0x53, 0x74, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x73, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6d, 0x61, 0x67, 0x6f, 0x74, 0x68, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x72, 0x61, 0x64, 0x61, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6f, 0x74, 0x68, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x72, 0x61, 0x64, 0x61, 0x72, 0x2e, 0x53, 0x70, 0x6f,
	0x6b, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x61, 0x67, 0x6f, 0x74, 0x68, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x72, 0x61, 0x64, 0x61, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x48, 0x01, 0x52, 0x04,
	0x70, 0x6f, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x70, 0x6f, 0x6b,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x67, 0x6f, 0x74, 0x68,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0xc1, 0x01, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x46, 0x46, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x57, 0x41, 0x52, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x49, 0x44, 0x4c,
	0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x50, 0x49, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x50,
	0x49, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4d, 0x49, 0x54, 0x10, 0x08, 0x2a,
	0x77, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x55, 0x52, 0x4e,
	0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x45,
	0x54, 0x5f, 0x47, 0x41, 0x49, 0x4e, 0x10, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_radar_proto_rawDescOnce sync.Once
	file_radar_proto_rawDescData []byte
)

func file_radar_proto_rawDescGZIP() []byte {
	file_radar_proto_rawDescOnce.Do(func() {
		file_radar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_radar_proto_rawDesc), len(file_radar_proto_rawDesc)))
	})
	return file_radar_proto_rawDescData
}

var file_radar_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_radar_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_radar_proto_goTypes = []any{
	(State)(0),                    // 0: magothy.protobuf.radar.State
	(CommandType)(0),              // 1: magothy.protobuf.radar.CommandType
	(*Pose)(nil),                  // 2: magothy.protobuf.radar.Pose
	(*Spokes)(nil),                // 3: magothy.protobuf.radar.Spokes
	(*Info)(nil),                  // 4: magothy.protobuf.radar.Info
	(*Command)(nil),               // 5: magothy.protobuf.radar.Command
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_radar_proto_depIdxs = []int32{
	6, // 0: magothy.protobuf.radar.Info.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: magothy.protobuf.radar.Info.state:type_name -> magothy.protobuf.radar.State
	3, // 2: magothy.protobuf.radar.Info.spokes:type_name -> magothy.protobuf.radar.Spokes
	2, // 3: magothy.protobuf.radar.Info.pose:type_name -> magothy.protobuf.radar.Pose
	1, // 4: magothy.protobuf.radar.Command.command:type_name -> magothy.protobuf.radar.CommandType
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_radar_proto_init() }
func file_radar_proto_init() {
	if File_radar_proto != nil {
		return
	}
	file_radar_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_radar_proto_rawDesc), len(file_radar_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_radar_proto_goTypes,
		DependencyIndexes: file_radar_proto_depIdxs,
		EnumInfos:         file_radar_proto_enumTypes,
		MessageInfos:      file_radar_proto_msgTypes,
	}.Build()
	File_radar_proto = out.File
	file_radar_proto_goTypes = nil
	file_radar_proto_depIdxs = nil
}
