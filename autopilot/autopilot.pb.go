// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: autopilot.proto

package autopilot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VehicleData_DataSource int32

const (
	VehicleData_DS_NODATA      VehicleData_DataSource = 0  // no data for a particular field
	VehicleData_DS_IMU         VehicleData_DataSource = 1  // Inertial Measurement Unit
	VehicleData_DS_AHRS        VehicleData_DataSource = 2  // Attitude and Heading Reference System
	VehicleData_DS_GPS         VehicleData_DataSource = 3  // GNSS (GPS, GLONASS, etc.)
	VehicleData_DS_DEPTH       VehicleData_DataSource = 4  // depth sensor
	VehicleData_DS_ALTITUDE    VehicleData_DataSource = 5  // altitude sensor
	VehicleData_DS_SPEED       VehicleData_DataSource = 6  // speed sensor
	VehicleData_DS_ESTIMATION  VehicleData_DataSource = 7  // estimation algorithm such as Kalman filter
	VehicleData_DS_COMPUTATION VehicleData_DataSource = 8  // such as heading rate computed by differentiating heading
	VehicleData_DS_SIMULATION  VehicleData_DataSource = 9  //
	VehicleData_DS_INS         VehicleData_DataSource = 10 // Inertial Navigation System
)

// Enum value maps for VehicleData_DataSource.
var (
	VehicleData_DataSource_name = map[int32]string{
		0:  "DS_NODATA",
		1:  "DS_IMU",
		2:  "DS_AHRS",
		3:  "DS_GPS",
		4:  "DS_DEPTH",
		5:  "DS_ALTITUDE",
		6:  "DS_SPEED",
		7:  "DS_ESTIMATION",
		8:  "DS_COMPUTATION",
		9:  "DS_SIMULATION",
		10: "DS_INS",
	}
	VehicleData_DataSource_value = map[string]int32{
		"DS_NODATA":      0,
		"DS_IMU":         1,
		"DS_AHRS":        2,
		"DS_GPS":         3,
		"DS_DEPTH":       4,
		"DS_ALTITUDE":    5,
		"DS_SPEED":       6,
		"DS_ESTIMATION":  7,
		"DS_COMPUTATION": 8,
		"DS_SIMULATION":  9,
		"DS_INS":         10,
	}
)

func (x VehicleData_DataSource) Enum() *VehicleData_DataSource {
	p := new(VehicleData_DataSource)
	*p = x
	return p
}

func (x VehicleData_DataSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleData_DataSource) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[0].Descriptor()
}

func (VehicleData_DataSource) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[0]
}

func (x VehicleData_DataSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleData_DataSource.Descriptor instead.
func (VehicleData_DataSource) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{9, 0}
}

type GpsIf_GgaData_FixQuality int32

const (
	GpsIf_GgaData_FQ_INVALID    GpsIf_GgaData_FixQuality = 0
	GpsIf_GgaData_FQ_GPS        GpsIf_GgaData_FixQuality = 1
	GpsIf_GgaData_FQ_DGPS       GpsIf_GgaData_FixQuality = 2
	GpsIf_GgaData_FQ_PPS        GpsIf_GgaData_FixQuality = 3
	GpsIf_GgaData_FQ_RTK_FIXED  GpsIf_GgaData_FixQuality = 4
	GpsIf_GgaData_FQ_RTK_FLOAT  GpsIf_GgaData_FixQuality = 5
	GpsIf_GgaData_FQ_ESTIMATED  GpsIf_GgaData_FixQuality = 6
	GpsIf_GgaData_FQ_MANUAL     GpsIf_GgaData_FixQuality = 7
	GpsIf_GgaData_FQ_SIMULATION GpsIf_GgaData_FixQuality = 8
)

// Enum value maps for GpsIf_GgaData_FixQuality.
var (
	GpsIf_GgaData_FixQuality_name = map[int32]string{
		0: "FQ_INVALID",
		1: "FQ_GPS",
		2: "FQ_DGPS",
		3: "FQ_PPS",
		4: "FQ_RTK_FIXED",
		5: "FQ_RTK_FLOAT",
		6: "FQ_ESTIMATED",
		7: "FQ_MANUAL",
		8: "FQ_SIMULATION",
	}
	GpsIf_GgaData_FixQuality_value = map[string]int32{
		"FQ_INVALID":    0,
		"FQ_GPS":        1,
		"FQ_DGPS":       2,
		"FQ_PPS":        3,
		"FQ_RTK_FIXED":  4,
		"FQ_RTK_FLOAT":  5,
		"FQ_ESTIMATED":  6,
		"FQ_MANUAL":     7,
		"FQ_SIMULATION": 8,
	}
)

func (x GpsIf_GgaData_FixQuality) Enum() *GpsIf_GgaData_FixQuality {
	p := new(GpsIf_GgaData_FixQuality)
	*p = x
	return p
}

func (x GpsIf_GgaData_FixQuality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GpsIf_GgaData_FixQuality) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[1].Descriptor()
}

func (GpsIf_GgaData_FixQuality) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[1]
}

func (x GpsIf_GgaData_FixQuality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GpsIf_GgaData_FixQuality.Descriptor instead.
func (GpsIf_GgaData_FixQuality) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{16, 1, 0}
}

type ObstacleIf_ZoneType int32

const (
	ObstacleIf_ZONE_KEEP_OUT ObstacleIf_ZoneType = 0
	ObstacleIf_ZONE_KEEP_IN  ObstacleIf_ZoneType = 1
)

// Enum value maps for ObstacleIf_ZoneType.
var (
	ObstacleIf_ZoneType_name = map[int32]string{
		0: "ZONE_KEEP_OUT",
		1: "ZONE_KEEP_IN",
	}
	ObstacleIf_ZoneType_value = map[string]int32{
		"ZONE_KEEP_OUT": 0,
		"ZONE_KEEP_IN":  1,
	}
)

func (x ObstacleIf_ZoneType) Enum() *ObstacleIf_ZoneType {
	p := new(ObstacleIf_ZoneType)
	*p = x
	return p
}

func (x ObstacleIf_ZoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObstacleIf_ZoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[2].Descriptor()
}

func (ObstacleIf_ZoneType) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[2]
}

func (x ObstacleIf_ZoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObstacleIf_ZoneType.Descriptor instead.
func (ObstacleIf_ZoneType) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{17, 0}
}

type ObstacleIf_IntentType int32

const (
	ObstacleIf_FRIENDLY ObstacleIf_IntentType = 0
	ObstacleIf_HOSTILE  ObstacleIf_IntentType = 1
	ObstacleIf_UNKNOWN  ObstacleIf_IntentType = 2
)

// Enum value maps for ObstacleIf_IntentType.
var (
	ObstacleIf_IntentType_name = map[int32]string{
		0: "FRIENDLY",
		1: "HOSTILE",
		2: "UNKNOWN",
	}
	ObstacleIf_IntentType_value = map[string]int32{
		"FRIENDLY": 0,
		"HOSTILE":  1,
		"UNKNOWN":  2,
	}
)

func (x ObstacleIf_IntentType) Enum() *ObstacleIf_IntentType {
	p := new(ObstacleIf_IntentType)
	*p = x
	return p
}

func (x ObstacleIf_IntentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObstacleIf_IntentType) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[3].Descriptor()
}

func (ObstacleIf_IntentType) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[3]
}

func (x ObstacleIf_IntentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObstacleIf_IntentType.Descriptor instead.
func (ObstacleIf_IntentType) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{17, 1}
}

type VehicleStateIf_Mode int32

const (
	VehicleStateIf_VS_STANDBY                    VehicleStateIf_Mode = 0
	VehicleStateIf_VS_MANUAL                     VehicleStateIf_Mode = 1
	VehicleStateIf_VS_HEALTHY_MISSION            VehicleStateIf_Mode = 2
	VehicleStateIf_VS_UNHEALTHY_MISSION          VehicleStateIf_Mode = 3
	VehicleStateIf_VS_LOITER                     VehicleStateIf_Mode = 4
	VehicleStateIf_VS_MISSION_PLANNING           VehicleStateIf_Mode = 5
	VehicleStateIf_VS_UNHEALTHY_MISSION_PLANNING VehicleStateIf_Mode = 6
)

// Enum value maps for VehicleStateIf_Mode.
var (
	VehicleStateIf_Mode_name = map[int32]string{
		0: "VS_STANDBY",
		1: "VS_MANUAL",
		2: "VS_HEALTHY_MISSION",
		3: "VS_UNHEALTHY_MISSION",
		4: "VS_LOITER",
		5: "VS_MISSION_PLANNING",
		6: "VS_UNHEALTHY_MISSION_PLANNING",
	}
	VehicleStateIf_Mode_value = map[string]int32{
		"VS_STANDBY":                    0,
		"VS_MANUAL":                     1,
		"VS_HEALTHY_MISSION":            2,
		"VS_UNHEALTHY_MISSION":          3,
		"VS_LOITER":                     4,
		"VS_MISSION_PLANNING":           5,
		"VS_UNHEALTHY_MISSION_PLANNING": 6,
	}
)

func (x VehicleStateIf_Mode) Enum() *VehicleStateIf_Mode {
	p := new(VehicleStateIf_Mode)
	*p = x
	return p
}

func (x VehicleStateIf_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleStateIf_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[4].Descriptor()
}

func (VehicleStateIf_Mode) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[4]
}

func (x VehicleStateIf_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleStateIf_Mode.Descriptor instead.
func (VehicleStateIf_Mode) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{20, 0}
}

type VehicleStateIf_FaultResponseType int32

const (
	VehicleStateIf_FR_IGNORE    VehicleStateIf_FaultResponseType = 0
	VehicleStateIf_FR_HALT      VehicleStateIf_FaultResponseType = 1
	VehicleStateIf_FR_LOITER    VehicleStateIf_FaultResponseType = 2
	VehicleStateIf_FR_GO_RALLY  VehicleStateIf_FaultResponseType = 3
	VehicleStateIf_FR_GO_FIRST  VehicleStateIf_FaultResponseType = 4
	VehicleStateIf_FR_GO_LAST   VehicleStateIf_FaultResponseType = 5
	VehicleStateIf_FR_GO_LAUNCH VehicleStateIf_FaultResponseType = 6
	VehicleStateIf_FR_CUSTOM    VehicleStateIf_FaultResponseType = 7
)

// Enum value maps for VehicleStateIf_FaultResponseType.
var (
	VehicleStateIf_FaultResponseType_name = map[int32]string{
		0: "FR_IGNORE",
		1: "FR_HALT",
		2: "FR_LOITER",
		3: "FR_GO_RALLY",
		4: "FR_GO_FIRST",
		5: "FR_GO_LAST",
		6: "FR_GO_LAUNCH",
		7: "FR_CUSTOM",
	}
	VehicleStateIf_FaultResponseType_value = map[string]int32{
		"FR_IGNORE":    0,
		"FR_HALT":      1,
		"FR_LOITER":    2,
		"FR_GO_RALLY":  3,
		"FR_GO_FIRST":  4,
		"FR_GO_LAST":   5,
		"FR_GO_LAUNCH": 6,
		"FR_CUSTOM":    7,
	}
)

func (x VehicleStateIf_FaultResponseType) Enum() *VehicleStateIf_FaultResponseType {
	p := new(VehicleStateIf_FaultResponseType)
	*p = x
	return p
}

func (x VehicleStateIf_FaultResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleStateIf_FaultResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_autopilot_proto_enumTypes[5].Descriptor()
}

func (VehicleStateIf_FaultResponseType) Type() protoreflect.EnumType {
	return &file_autopilot_proto_enumTypes[5]
}

func (x VehicleStateIf_FaultResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleStateIf_FaultResponseType.Descriptor instead.
func (VehicleStateIf_FaultResponseType) EnumDescriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{20, 1}
}

type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatitudeDeg   float64                `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3" json:"latitude_deg,omitempty"`
	LongitudeDeg  float64                `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3" json:"longitude_deg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_autopilot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetLatitudeDeg() float64 {
	if x != nil {
		return x.LatitudeDeg
	}
	return 0
}

func (x *Position) GetLongitudeDeg() float64 {
	if x != nil {
		return x.LongitudeDeg
	}
	return 0
}

type AngularRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XDps          float64                `protobuf:"fixed64,1,opt,name=x_dps,json=xDps,proto3" json:"x_dps,omitempty"`
	YDps          float64                `protobuf:"fixed64,2,opt,name=y_dps,json=yDps,proto3" json:"y_dps,omitempty"`
	ZDps          float64                `protobuf:"fixed64,3,opt,name=z_dps,json=zDps,proto3" json:"z_dps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AngularRate) Reset() {
	*x = AngularRate{}
	mi := &file_autopilot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AngularRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AngularRate) ProtoMessage() {}

func (x *AngularRate) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AngularRate.ProtoReflect.Descriptor instead.
func (*AngularRate) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{1}
}

func (x *AngularRate) GetXDps() float64 {
	if x != nil {
		return x.XDps
	}
	return 0
}

func (x *AngularRate) GetYDps() float64 {
	if x != nil {
		return x.YDps
	}
	return 0
}

func (x *AngularRate) GetZDps() float64 {
	if x != nil {
		return x.ZDps
	}
	return 0
}

type Acceleration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XMps2         float64                `protobuf:"fixed64,1,opt,name=x_mps2,json=xMps2,proto3" json:"x_mps2,omitempty"`
	YMps2         float64                `protobuf:"fixed64,2,opt,name=y_mps2,json=yMps2,proto3" json:"y_mps2,omitempty"`
	ZMps2         float64                `protobuf:"fixed64,3,opt,name=z_mps2,json=zMps2,proto3" json:"z_mps2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Acceleration) Reset() {
	*x = Acceleration{}
	mi := &file_autopilot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acceleration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acceleration) ProtoMessage() {}

func (x *Acceleration) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acceleration.ProtoReflect.Descriptor instead.
func (*Acceleration) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{2}
}

func (x *Acceleration) GetXMps2() float64 {
	if x != nil {
		return x.XMps2
	}
	return 0
}

func (x *Acceleration) GetYMps2() float64 {
	if x != nil {
		return x.YMps2
	}
	return 0
}

func (x *Acceleration) GetZMps2() float64 {
	if x != nil {
		return x.ZMps2
	}
	return 0
}

type MagneticField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XGauss        float64                `protobuf:"fixed64,1,opt,name=x_gauss,json=xGauss,proto3" json:"x_gauss,omitempty"`
	YGauss        float64                `protobuf:"fixed64,2,opt,name=y_gauss,json=yGauss,proto3" json:"y_gauss,omitempty"`
	ZGauss        float64                `protobuf:"fixed64,3,opt,name=z_gauss,json=zGauss,proto3" json:"z_gauss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagneticField) Reset() {
	*x = MagneticField{}
	mi := &file_autopilot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagneticField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagneticField) ProtoMessage() {}

func (x *MagneticField) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagneticField.ProtoReflect.Descriptor instead.
func (*MagneticField) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{3}
}

func (x *MagneticField) GetXGauss() float64 {
	if x != nil {
		return x.XGauss
	}
	return 0
}

func (x *MagneticField) GetYGauss() float64 {
	if x != nil {
		return x.YGauss
	}
	return 0
}

func (x *MagneticField) GetZGauss() float64 {
	if x != nil {
		return x.ZGauss
	}
	return 0
}

type Euler struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RollDeg       float64                `protobuf:"fixed64,1,opt,name=roll_deg,json=rollDeg,proto3" json:"roll_deg,omitempty"`
	PitchDeg      float64                `protobuf:"fixed64,2,opt,name=pitch_deg,json=pitchDeg,proto3" json:"pitch_deg,omitempty"`
	HeadingDeg    float64                `protobuf:"fixed64,3,opt,name=heading_deg,json=headingDeg,proto3" json:"heading_deg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Euler) Reset() {
	*x = Euler{}
	mi := &file_autopilot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Euler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Euler) ProtoMessage() {}

func (x *Euler) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Euler.ProtoReflect.Descriptor instead.
func (*Euler) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{4}
}

func (x *Euler) GetRollDeg() float64 {
	if x != nil {
		return x.RollDeg
	}
	return 0
}

func (x *Euler) GetPitchDeg() float64 {
	if x != nil {
		return x.PitchDeg
	}
	return 0
}

func (x *Euler) GetHeadingDeg() float64 {
	if x != nil {
		return x.HeadingDeg
	}
	return 0
}

type BodyVelocity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XMps          float64                `protobuf:"fixed64,1,opt,name=x_mps,json=xMps,proto3" json:"x_mps,omitempty"`
	YMps          float64                `protobuf:"fixed64,2,opt,name=y_mps,json=yMps,proto3" json:"y_mps,omitempty"`
	ZMps          float64                `protobuf:"fixed64,3,opt,name=z_mps,json=zMps,proto3" json:"z_mps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BodyVelocity) Reset() {
	*x = BodyVelocity{}
	mi := &file_autopilot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BodyVelocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyVelocity) ProtoMessage() {}

func (x *BodyVelocity) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyVelocity.ProtoReflect.Descriptor instead.
func (*BodyVelocity) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{5}
}

func (x *BodyVelocity) GetXMps() float64 {
	if x != nil {
		return x.XMps
	}
	return 0
}

func (x *BodyVelocity) GetYMps() float64 {
	if x != nil {
		return x.YMps
	}
	return 0
}

func (x *BodyVelocity) GetZMps() float64 {
	if x != nil {
		return x.ZMps
	}
	return 0
}

type InertialVelocity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NorthMps      float64                `protobuf:"fixed64,1,opt,name=north_mps,json=northMps,proto3" json:"north_mps,omitempty"`
	EastMps       float64                `protobuf:"fixed64,2,opt,name=east_mps,json=eastMps,proto3" json:"east_mps,omitempty"`
	DownMps       float64                `protobuf:"fixed64,3,opt,name=down_mps,json=downMps,proto3" json:"down_mps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InertialVelocity) Reset() {
	*x = InertialVelocity{}
	mi := &file_autopilot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InertialVelocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InertialVelocity) ProtoMessage() {}

func (x *InertialVelocity) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InertialVelocity.ProtoReflect.Descriptor instead.
func (*InertialVelocity) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{6}
}

func (x *InertialVelocity) GetNorthMps() float64 {
	if x != nil {
		return x.NorthMps
	}
	return 0
}

func (x *InertialVelocity) GetEastMps() float64 {
	if x != nil {
		return x.EastMps
	}
	return 0
}

func (x *InertialVelocity) GetDownMps() float64 {
	if x != nil {
		return x.DownMps
	}
	return 0
}

type WaterCurrent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpeedMps      float64                `protobuf:"fixed64,1,opt,name=speed_mps,json=speedMps,proto3" json:"speed_mps,omitempty"`
	DirectionDeg  float64                `protobuf:"fixed64,2,opt,name=direction_deg,json=directionDeg,proto3" json:"direction_deg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaterCurrent) Reset() {
	*x = WaterCurrent{}
	mi := &file_autopilot_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaterCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaterCurrent) ProtoMessage() {}

func (x *WaterCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaterCurrent.ProtoReflect.Descriptor instead.
func (*WaterCurrent) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{7}
}

func (x *WaterCurrent) GetSpeedMps() float64 {
	if x != nil {
		return x.SpeedMps
	}
	return 0
}

func (x *WaterCurrent) GetDirectionDeg() float64 {
	if x != nil {
		return x.DirectionDeg
	}
	return 0
}

type FuelGauge struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Voltage_V            float64                `protobuf:"fixed64,1,opt,name=voltage_V,json=voltageV,proto3" json:"voltage_V,omitempty"`
	Current_A            float64                `protobuf:"fixed64,2,opt,name=current_A,json=currentA,proto3" json:"current_A,omitempty"`
	StateOfChargePercent float64                `protobuf:"fixed64,3,opt,name=state_of_charge_percent,json=stateOfChargePercent,proto3" json:"state_of_charge_percent,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FuelGauge) Reset() {
	*x = FuelGauge{}
	mi := &file_autopilot_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuelGauge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuelGauge) ProtoMessage() {}

func (x *FuelGauge) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuelGauge.ProtoReflect.Descriptor instead.
func (*FuelGauge) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{8}
}

func (x *FuelGauge) GetVoltage_V() float64 {
	if x != nil {
		return x.Voltage_V
	}
	return 0
}

func (x *FuelGauge) GetCurrent_A() float64 {
	if x != nil {
		return x.Current_A
	}
	return 0
}

func (x *FuelGauge) GetStateOfChargePercent() float64 {
	if x != nil {
		return x.StateOfChargePercent
	}
	return 0
}

type VehicleData struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Position                       *Position              `protobuf:"bytes,1,opt,name=position,proto3,oneof" json:"position,omitempty"`
	PositionSource                 VehicleData_DataSource `protobuf:"varint,2,opt,name=position_source,json=positionSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"position_source,omitempty"`
	PositionTtagNsSteady           uint64                 `protobuf:"varint,3,opt,name=position_ttag_ns_steady,json=positionTtagNsSteady,proto3" json:"position_ttag_ns_steady,omitempty"`
	Attitude                       *Euler                 `protobuf:"bytes,4,opt,name=attitude,proto3,oneof" json:"attitude,omitempty"`
	AttitudeSource                 VehicleData_DataSource `protobuf:"varint,5,opt,name=attitude_source,json=attitudeSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"attitude_source,omitempty"`
	AttitudeTtagNsSteady           uint64                 `protobuf:"varint,6,opt,name=attitude_ttag_ns_steady,json=attitudeTtagNsSteady,proto3" json:"attitude_ttag_ns_steady,omitempty"`
	AngularRate                    *AngularRate           `protobuf:"bytes,7,opt,name=angular_rate,json=angularRate,proto3,oneof" json:"angular_rate,omitempty"`
	AngularRateSource              VehicleData_DataSource `protobuf:"varint,8,opt,name=angular_rate_source,json=angularRateSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"angular_rate_source,omitempty"`
	AngularRateTtagNsSteady        uint64                 `protobuf:"varint,9,opt,name=angular_rate_ttag_ns_steady,json=angularRateTtagNsSteady,proto3" json:"angular_rate_ttag_ns_steady,omitempty"`
	Acceleration                   *Acceleration          `protobuf:"bytes,10,opt,name=acceleration,proto3,oneof" json:"acceleration,omitempty"`
	AccelerationSource             VehicleData_DataSource `protobuf:"varint,11,opt,name=acceleration_source,json=accelerationSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"acceleration_source,omitempty"`
	AccelerationTtagNsSteady       uint64                 `protobuf:"varint,12,opt,name=acceleration_ttag_ns_steady,json=accelerationTtagNsSteady,proto3" json:"acceleration_ttag_ns_steady,omitempty"`
	MagneticField                  *MagneticField         `protobuf:"bytes,13,opt,name=magnetic_field,json=magneticField,proto3,oneof" json:"magnetic_field,omitempty"`
	MagneticFieldSource            VehicleData_DataSource `protobuf:"varint,14,opt,name=magnetic_field_source,json=magneticFieldSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"magnetic_field_source,omitempty"`
	MagneticFieldTtagNsSteady      uint64                 `protobuf:"varint,15,opt,name=magnetic_field_ttag_ns_steady,json=magneticFieldTtagNsSteady,proto3" json:"magnetic_field_ttag_ns_steady,omitempty"`
	DepthM                         *float64               `protobuf:"fixed64,16,opt,name=depth_m,json=depthM,proto3,oneof" json:"depth_m,omitempty"`
	DepthSource                    VehicleData_DataSource `protobuf:"varint,17,opt,name=depth_source,json=depthSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"depth_source,omitempty"`
	DepthTtagNsSteady              uint64                 `protobuf:"varint,18,opt,name=depth_ttag_ns_steady,json=depthTtagNsSteady,proto3" json:"depth_ttag_ns_steady,omitempty"`
	AltitudeM                      *float64               `protobuf:"fixed64,19,opt,name=altitude_m,json=altitudeM,proto3,oneof" json:"altitude_m,omitempty"`
	AltitudeSource                 VehicleData_DataSource `protobuf:"varint,20,opt,name=altitude_source,json=altitudeSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"altitude_source,omitempty"`
	AltitudeTtagNsSteady           uint64                 `protobuf:"varint,21,opt,name=altitude_ttag_ns_steady,json=altitudeTtagNsSteady,proto3" json:"altitude_ttag_ns_steady,omitempty"`
	SpeedMps                       *float64               `protobuf:"fixed64,22,opt,name=speed_mps,json=speedMps,proto3,oneof" json:"speed_mps,omitempty"`
	SpeedSource                    VehicleData_DataSource `protobuf:"varint,23,opt,name=speed_source,json=speedSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"speed_source,omitempty"`
	SpeedTtagNsSteady              uint64                 `protobuf:"varint,24,opt,name=speed_ttag_ns_steady,json=speedTtagNsSteady,proto3" json:"speed_ttag_ns_steady,omitempty"`
	CourseDeg                      *float64               `protobuf:"fixed64,25,opt,name=course_deg,json=courseDeg,proto3,oneof" json:"course_deg,omitempty"`
	CourseSource                   VehicleData_DataSource `protobuf:"varint,26,opt,name=course_source,json=courseSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"course_source,omitempty"`
	CourseTtagNsSteady             uint64                 `protobuf:"varint,27,opt,name=course_ttag_ns_steady,json=courseTtagNsSteady,proto3" json:"course_ttag_ns_steady,omitempty"`
	BodyVelocity                   *BodyVelocity          `protobuf:"bytes,28,opt,name=body_velocity,json=bodyVelocity,proto3,oneof" json:"body_velocity,omitempty"`
	BodyVelocitySource             VehicleData_DataSource `protobuf:"varint,29,opt,name=body_velocity_source,json=bodyVelocitySource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"body_velocity_source,omitempty"`
	BodyVelocityTtagNsSteady       uint64                 `protobuf:"varint,30,opt,name=body_velocity_ttag_ns_steady,json=bodyVelocityTtagNsSteady,proto3" json:"body_velocity_ttag_ns_steady,omitempty"`
	WaterCurrent                   *WaterCurrent          `protobuf:"bytes,31,opt,name=water_current,json=waterCurrent,proto3,oneof" json:"water_current,omitempty"`
	WaterCurrentSource             VehicleData_DataSource `protobuf:"varint,32,opt,name=water_current_source,json=waterCurrentSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"water_current_source,omitempty"`
	WaterCurrentTtagNsSteady       uint64                 `protobuf:"varint,33,opt,name=water_current_ttag_ns_steady,json=waterCurrentTtagNsSteady,proto3" json:"water_current_ttag_ns_steady,omitempty"`
	WaterRelativeSpeedMps          *float64               `protobuf:"fixed64,34,opt,name=water_relative_speed_mps,json=waterRelativeSpeedMps,proto3,oneof" json:"water_relative_speed_mps,omitempty"`
	WaterRelativeSpeedSource       VehicleData_DataSource `protobuf:"varint,35,opt,name=water_relative_speed_source,json=waterRelativeSpeedSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"water_relative_speed_source,omitempty"`
	WaterRelativeSpeedTtagNsSteady uint64                 `protobuf:"varint,36,opt,name=water_relative_speed_ttag_ns_steady,json=waterRelativeSpeedTtagNsSteady,proto3" json:"water_relative_speed_ttag_ns_steady,omitempty"`
	FuelGauge                      *FuelGauge             `protobuf:"bytes,37,opt,name=fuel_gauge,json=fuelGauge,proto3,oneof" json:"fuel_gauge,omitempty"`
	FuelGaugeSource                VehicleData_DataSource `protobuf:"varint,38,opt,name=fuel_gauge_source,json=fuelGaugeSource,proto3,enum=magothy.protobuf.autopilot.VehicleData_DataSource" json:"fuel_gauge_source,omitempty"`
	FuelGaugeTtagNsSteady          uint64                 `protobuf:"varint,39,opt,name=fuel_gauge_ttag_ns_steady,json=fuelGaugeTtagNsSteady,proto3" json:"fuel_gauge_ttag_ns_steady,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *VehicleData) Reset() {
	*x = VehicleData{}
	mi := &file_autopilot_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleData) ProtoMessage() {}

func (x *VehicleData) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleData.ProtoReflect.Descriptor instead.
func (*VehicleData) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{9}
}

func (x *VehicleData) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *VehicleData) GetPositionSource() VehicleData_DataSource {
	if x != nil {
		return x.PositionSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetPositionTtagNsSteady() uint64 {
	if x != nil {
		return x.PositionTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetAttitude() *Euler {
	if x != nil {
		return x.Attitude
	}
	return nil
}

func (x *VehicleData) GetAttitudeSource() VehicleData_DataSource {
	if x != nil {
		return x.AttitudeSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetAttitudeTtagNsSteady() uint64 {
	if x != nil {
		return x.AttitudeTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetAngularRate() *AngularRate {
	if x != nil {
		return x.AngularRate
	}
	return nil
}

func (x *VehicleData) GetAngularRateSource() VehicleData_DataSource {
	if x != nil {
		return x.AngularRateSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetAngularRateTtagNsSteady() uint64 {
	if x != nil {
		return x.AngularRateTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetAcceleration() *Acceleration {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *VehicleData) GetAccelerationSource() VehicleData_DataSource {
	if x != nil {
		return x.AccelerationSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetAccelerationTtagNsSteady() uint64 {
	if x != nil {
		return x.AccelerationTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetMagneticField() *MagneticField {
	if x != nil {
		return x.MagneticField
	}
	return nil
}

func (x *VehicleData) GetMagneticFieldSource() VehicleData_DataSource {
	if x != nil {
		return x.MagneticFieldSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetMagneticFieldTtagNsSteady() uint64 {
	if x != nil {
		return x.MagneticFieldTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetDepthM() float64 {
	if x != nil && x.DepthM != nil {
		return *x.DepthM
	}
	return 0
}

func (x *VehicleData) GetDepthSource() VehicleData_DataSource {
	if x != nil {
		return x.DepthSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetDepthTtagNsSteady() uint64 {
	if x != nil {
		return x.DepthTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetAltitudeM() float64 {
	if x != nil && x.AltitudeM != nil {
		return *x.AltitudeM
	}
	return 0
}

func (x *VehicleData) GetAltitudeSource() VehicleData_DataSource {
	if x != nil {
		return x.AltitudeSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetAltitudeTtagNsSteady() uint64 {
	if x != nil {
		return x.AltitudeTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetSpeedMps() float64 {
	if x != nil && x.SpeedMps != nil {
		return *x.SpeedMps
	}
	return 0
}

func (x *VehicleData) GetSpeedSource() VehicleData_DataSource {
	if x != nil {
		return x.SpeedSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetSpeedTtagNsSteady() uint64 {
	if x != nil {
		return x.SpeedTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetCourseDeg() float64 {
	if x != nil && x.CourseDeg != nil {
		return *x.CourseDeg
	}
	return 0
}

func (x *VehicleData) GetCourseSource() VehicleData_DataSource {
	if x != nil {
		return x.CourseSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetCourseTtagNsSteady() uint64 {
	if x != nil {
		return x.CourseTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetBodyVelocity() *BodyVelocity {
	if x != nil {
		return x.BodyVelocity
	}
	return nil
}

func (x *VehicleData) GetBodyVelocitySource() VehicleData_DataSource {
	if x != nil {
		return x.BodyVelocitySource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetBodyVelocityTtagNsSteady() uint64 {
	if x != nil {
		return x.BodyVelocityTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetWaterCurrent() *WaterCurrent {
	if x != nil {
		return x.WaterCurrent
	}
	return nil
}

func (x *VehicleData) GetWaterCurrentSource() VehicleData_DataSource {
	if x != nil {
		return x.WaterCurrentSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetWaterCurrentTtagNsSteady() uint64 {
	if x != nil {
		return x.WaterCurrentTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetWaterRelativeSpeedMps() float64 {
	if x != nil && x.WaterRelativeSpeedMps != nil {
		return *x.WaterRelativeSpeedMps
	}
	return 0
}

func (x *VehicleData) GetWaterRelativeSpeedSource() VehicleData_DataSource {
	if x != nil {
		return x.WaterRelativeSpeedSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetWaterRelativeSpeedTtagNsSteady() uint64 {
	if x != nil {
		return x.WaterRelativeSpeedTtagNsSteady
	}
	return 0
}

func (x *VehicleData) GetFuelGauge() *FuelGauge {
	if x != nil {
		return x.FuelGauge
	}
	return nil
}

func (x *VehicleData) GetFuelGaugeSource() VehicleData_DataSource {
	if x != nil {
		return x.FuelGaugeSource
	}
	return VehicleData_DS_NODATA
}

func (x *VehicleData) GetFuelGaugeTtagNsSteady() uint64 {
	if x != nil {
		return x.FuelGaugeTtagNsSteady
	}
	return 0
}

type AhrsIf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AngularRate   *AngularRate           `protobuf:"bytes,1,opt,name=angular_rate,json=angularRate,proto3,oneof" json:"angular_rate,omitempty"`
	Acceleration  *Acceleration          `protobuf:"bytes,2,opt,name=acceleration,proto3,oneof" json:"acceleration,omitempty"`
	Magfield      *MagneticField         `protobuf:"bytes,3,opt,name=magfield,proto3,oneof" json:"magfield,omitempty"`
	Euler         *Euler                 `protobuf:"bytes,4,opt,name=euler,proto3,oneof" json:"euler,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AhrsIf) Reset() {
	*x = AhrsIf{}
	mi := &file_autopilot_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AhrsIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AhrsIf) ProtoMessage() {}

func (x *AhrsIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AhrsIf.ProtoReflect.Descriptor instead.
func (*AhrsIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{10}
}

func (x *AhrsIf) GetAngularRate() *AngularRate {
	if x != nil {
		return x.AngularRate
	}
	return nil
}

func (x *AhrsIf) GetAcceleration() *Acceleration {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *AhrsIf) GetMagfield() *MagneticField {
	if x != nil {
		return x.Magfield
	}
	return nil
}

func (x *AhrsIf) GetEuler() *Euler {
	if x != nil {
		return x.Euler
	}
	return nil
}

type AltitudeIf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AltitudeM     *float64               `protobuf:"fixed64,1,opt,name=altitude_m,json=altitudeM,proto3,oneof" json:"altitude_m,omitempty"` // use NaN to represent unset
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AltitudeIf) Reset() {
	*x = AltitudeIf{}
	mi := &file_autopilot_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AltitudeIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltitudeIf) ProtoMessage() {}

func (x *AltitudeIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltitudeIf.ProtoReflect.Descriptor instead.
func (*AltitudeIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{11}
}

func (x *AltitudeIf) GetAltitudeM() float64 {
	if x != nil && x.AltitudeM != nil {
		return *x.AltitudeM
	}
	return 0
}

type BatteryIf struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Voltage_V            *float64               `protobuf:"fixed64,1,opt,name=voltage_V,json=voltageV,proto3,oneof" json:"voltage_V,omitempty"`                                        // use NaN to represent unset
	Current_A            *float64               `protobuf:"fixed64,2,opt,name=current_A,json=currentA,proto3,oneof" json:"current_A,omitempty"`                                        // use NaN to represent unset
	StateOfChargePercent *int32                 `protobuf:"varint,3,opt,name=state_of_charge_percent,json=stateOfChargePercent,proto3,oneof" json:"state_of_charge_percent,omitempty"` // use < 0 to represent unset
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BatteryIf) Reset() {
	*x = BatteryIf{}
	mi := &file_autopilot_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatteryIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryIf) ProtoMessage() {}

func (x *BatteryIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryIf.ProtoReflect.Descriptor instead.
func (*BatteryIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{12}
}

func (x *BatteryIf) GetVoltage_V() float64 {
	if x != nil && x.Voltage_V != nil {
		return *x.Voltage_V
	}
	return 0
}

func (x *BatteryIf) GetCurrent_A() float64 {
	if x != nil && x.Current_A != nil {
		return *x.Current_A
	}
	return 0
}

func (x *BatteryIf) GetStateOfChargePercent() int32 {
	if x != nil && x.StateOfChargePercent != nil {
		return *x.StateOfChargePercent
	}
	return 0
}

type DepthIf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DepthM        *float64               `protobuf:"fixed64,1,opt,name=depth_m,json=depthM,proto3,oneof" json:"depth_m,omitempty"` // use NaN to represent unset
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DepthIf) Reset() {
	*x = DepthIf{}
	mi := &file_autopilot_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepthIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthIf) ProtoMessage() {}

func (x *DepthIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthIf.ProtoReflect.Descriptor instead.
func (*DepthIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{13}
}

func (x *DepthIf) GetDepthM() float64 {
	if x != nil && x.DepthM != nil {
		return *x.DepthM
	}
	return 0
}

type EffectorIf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       []float64              `protobuf:"fixed64,1,rep,packed,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EffectorIf) Reset() {
	*x = EffectorIf{}
	mi := &file_autopilot_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EffectorIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectorIf) ProtoMessage() {}

func (x *EffectorIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectorIf.ProtoReflect.Descriptor instead.
func (*EffectorIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{14}
}

func (x *EffectorIf) GetCommand() []float64 {
	if x != nil {
		return x.Command
	}
	return nil
}

type InsIf struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AngularRate      *AngularRate           `protobuf:"bytes,1,opt,name=angular_rate,json=angularRate,proto3,oneof" json:"angular_rate,omitempty"`
	Acceleration     *Acceleration          `protobuf:"bytes,2,opt,name=acceleration,proto3,oneof" json:"acceleration,omitempty"`
	Magfield         *MagneticField         `protobuf:"bytes,3,opt,name=magfield,proto3,oneof" json:"magfield,omitempty"`
	Euler            *Euler                 `protobuf:"bytes,4,opt,name=euler,proto3,oneof" json:"euler,omitempty"`
	BodyVelocity     *BodyVelocity          `protobuf:"bytes,5,opt,name=body_velocity,json=bodyVelocity,proto3,oneof" json:"body_velocity,omitempty"`
	Position         *Position              `protobuf:"bytes,6,opt,name=position,proto3,oneof" json:"position,omitempty"`
	InertialVelocity *InertialVelocity      `protobuf:"bytes,7,opt,name=inertial_velocity,json=inertialVelocity,proto3,oneof" json:"inertial_velocity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InsIf) Reset() {
	*x = InsIf{}
	mi := &file_autopilot_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsIf) ProtoMessage() {}

func (x *InsIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsIf.ProtoReflect.Descriptor instead.
func (*InsIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{15}
}

func (x *InsIf) GetAngularRate() *AngularRate {
	if x != nil {
		return x.AngularRate
	}
	return nil
}

func (x *InsIf) GetAcceleration() *Acceleration {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *InsIf) GetMagfield() *MagneticField {
	if x != nil {
		return x.Magfield
	}
	return nil
}

func (x *InsIf) GetEuler() *Euler {
	if x != nil {
		return x.Euler
	}
	return nil
}

func (x *InsIf) GetBodyVelocity() *BodyVelocity {
	if x != nil {
		return x.BodyVelocity
	}
	return nil
}

func (x *InsIf) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *InsIf) GetInertialVelocity() *InertialVelocity {
	if x != nil {
		return x.InertialVelocity
	}
	return nil
}

type GpsIf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RmcData       *GpsIf_RmcData         `protobuf:"bytes,1,opt,name=rmc_data,json=rmcData,proto3,oneof" json:"rmc_data,omitempty"`
	GgaData       *GpsIf_GgaData         `protobuf:"bytes,2,opt,name=gga_data,json=ggaData,proto3,oneof" json:"gga_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GpsIf) Reset() {
	*x = GpsIf{}
	mi := &file_autopilot_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GpsIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpsIf) ProtoMessage() {}

func (x *GpsIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpsIf.ProtoReflect.Descriptor instead.
func (*GpsIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{16}
}

func (x *GpsIf) GetRmcData() *GpsIf_RmcData {
	if x != nil {
		return x.RmcData
	}
	return nil
}

func (x *GpsIf) GetGgaData() *GpsIf_GgaData {
	if x != nil {
		return x.GgaData
	}
	return nil
}

type ObstacleIf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to ObstacleOneOf:
	//
	//	*ObstacleIf_Circle_
	//	*ObstacleIf_Polygon_
	ObstacleOneOf   isObstacleIf_ObstacleOneOf `protobuf_oneof:"ObstacleOneOf"`
	ZoneType        ObstacleIf_ZoneType        `protobuf:"varint,4,opt,name=zone_type,json=zoneType,proto3,enum=magothy.protobuf.autopilot.ObstacleIf_ZoneType" json:"zone_type,omitempty"`
	IsStationary    bool                       `protobuf:"varint,5,opt,name=is_stationary,json=isStationary,proto3" json:"is_stationary,omitempty"`
	LifespanS       float64                    `protobuf:"fixed64,6,opt,name=lifespan_s,json=lifespanS,proto3" json:"lifespan_s,omitempty"`
	CourseDeg       *float64                   `protobuf:"fixed64,7,opt,name=course_deg,json=courseDeg,proto3,oneof" json:"course_deg,omitempty"`
	SpeedMps        *float64                   `protobuf:"fixed64,8,opt,name=speed_mps,json=speedMps,proto3,oneof" json:"speed_mps,omitempty"`
	PointOfInterest *Position                  `protobuf:"bytes,9,opt,name=point_of_interest,json=pointOfInterest,proto3,oneof" json:"point_of_interest,omitempty"`
	IntentType      *ObstacleIf_IntentType     `protobuf:"varint,10,opt,name=intent_type,json=intentType,proto3,enum=magothy.protobuf.autopilot.ObstacleIf_IntentType,oneof" json:"intent_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObstacleIf) Reset() {
	*x = ObstacleIf{}
	mi := &file_autopilot_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObstacleIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleIf) ProtoMessage() {}

func (x *ObstacleIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleIf.ProtoReflect.Descriptor instead.
func (*ObstacleIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{17}
}

func (x *ObstacleIf) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ObstacleIf) GetObstacleOneOf() isObstacleIf_ObstacleOneOf {
	if x != nil {
		return x.ObstacleOneOf
	}
	return nil
}

func (x *ObstacleIf) GetCircle() *ObstacleIf_Circle {
	if x != nil {
		if x, ok := x.ObstacleOneOf.(*ObstacleIf_Circle_); ok {
			return x.Circle
		}
	}
	return nil
}

func (x *ObstacleIf) GetPolygon() *ObstacleIf_Polygon {
	if x != nil {
		if x, ok := x.ObstacleOneOf.(*ObstacleIf_Polygon_); ok {
			return x.Polygon
		}
	}
	return nil
}

func (x *ObstacleIf) GetZoneType() ObstacleIf_ZoneType {
	if x != nil {
		return x.ZoneType
	}
	return ObstacleIf_ZONE_KEEP_OUT
}

func (x *ObstacleIf) GetIsStationary() bool {
	if x != nil {
		return x.IsStationary
	}
	return false
}

func (x *ObstacleIf) GetLifespanS() float64 {
	if x != nil {
		return x.LifespanS
	}
	return 0
}

func (x *ObstacleIf) GetCourseDeg() float64 {
	if x != nil && x.CourseDeg != nil {
		return *x.CourseDeg
	}
	return 0
}

func (x *ObstacleIf) GetSpeedMps() float64 {
	if x != nil && x.SpeedMps != nil {
		return *x.SpeedMps
	}
	return 0
}

func (x *ObstacleIf) GetPointOfInterest() *Position {
	if x != nil {
		return x.PointOfInterest
	}
	return nil
}

func (x *ObstacleIf) GetIntentType() ObstacleIf_IntentType {
	if x != nil && x.IntentType != nil {
		return *x.IntentType
	}
	return ObstacleIf_FRIENDLY
}

type isObstacleIf_ObstacleOneOf interface {
	isObstacleIf_ObstacleOneOf()
}

type ObstacleIf_Circle_ struct {
	Circle *ObstacleIf_Circle `protobuf:"bytes,2,opt,name=circle,proto3,oneof"`
}

type ObstacleIf_Polygon_ struct {
	Polygon *ObstacleIf_Polygon `protobuf:"bytes,3,opt,name=polygon,proto3,oneof"`
}

func (*ObstacleIf_Circle_) isObstacleIf_ObstacleOneOf() {}

func (*ObstacleIf_Polygon_) isObstacleIf_ObstacleOneOf() {}

type Obstacles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TtagSystem    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ttag_system,json=ttagSystem,proto3" json:"ttag_system,omitempty"`
	TtagSteadyNs  uint64                 `protobuf:"varint,2,opt,name=ttag_steady_ns,json=ttagSteadyNs,proto3" json:"ttag_steady_ns,omitempty"`
	Obstacles     []*ObstacleIf          `protobuf:"bytes,3,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Obstacles) Reset() {
	*x = Obstacles{}
	mi := &file_autopilot_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Obstacles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Obstacles) ProtoMessage() {}

func (x *Obstacles) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Obstacles.ProtoReflect.Descriptor instead.
func (*Obstacles) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{18}
}

func (x *Obstacles) GetTtagSystem() *timestamppb.Timestamp {
	if x != nil {
		return x.TtagSystem
	}
	return nil
}

func (x *Obstacles) GetTtagSteadyNs() uint64 {
	if x != nil {
		return x.TtagSteadyNs
	}
	return 0
}

func (x *Obstacles) GetObstacles() []*ObstacleIf {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TtagSystem    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ttag_system,json=ttagSystem,proto3" json:"ttag_system,omitempty"`
	TtagSteadyNs  uint64                 `protobuf:"varint,2,opt,name=ttag_steady_ns,json=ttagSteadyNs,proto3" json:"ttag_steady_ns,omitempty"`
	Path          []*Position            `protobuf:"bytes,3,rep,name=path,proto3" json:"path,omitempty"` // local path
	Obstacles     []*ObstacleIf          `protobuf:"bytes,4,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	SpeedMps      *float64               `protobuf:"fixed64,5,opt,name=speed_mps,json=speedMps,proto3,oneof" json:"speed_mps,omitempty"`
	Start         *Position              `protobuf:"bytes,6,opt,name=start,proto3,oneof" json:"start,omitempty"`
	EndLocal      *Position              `protobuf:"bytes,7,opt,name=end_local,json=endLocal,proto3,oneof" json:"end_local,omitempty"`
	EndGlobal     *Position              `protobuf:"bytes,8,opt,name=end_global,json=endGlobal,proto3,oneof" json:"end_global,omitempty"`
	GlobalPath    []*Position            `protobuf:"bytes,9,rep,name=global_path,json=globalPath,proto3" json:"global_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Path) Reset() {
	*x = Path{}
	mi := &file_autopilot_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{19}
}

func (x *Path) GetTtagSystem() *timestamppb.Timestamp {
	if x != nil {
		return x.TtagSystem
	}
	return nil
}

func (x *Path) GetTtagSteadyNs() uint64 {
	if x != nil {
		return x.TtagSteadyNs
	}
	return 0
}

func (x *Path) GetPath() []*Position {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Path) GetObstacles() []*ObstacleIf {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

func (x *Path) GetSpeedMps() float64 {
	if x != nil && x.SpeedMps != nil {
		return *x.SpeedMps
	}
	return 0
}

func (x *Path) GetStart() *Position {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Path) GetEndLocal() *Position {
	if x != nil {
		return x.EndLocal
	}
	return nil
}

func (x *Path) GetEndGlobal() *Position {
	if x != nil {
		return x.EndGlobal
	}
	return nil
}

func (x *Path) GetGlobalPath() []*Position {
	if x != nil {
		return x.GlobalPath
	}
	return nil
}

type VehicleStateIf struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	TtagNs        uint64                        `protobuf:"varint,1,opt,name=ttag_ns,json=ttagNs,proto3" json:"ttag_ns,omitempty"`
	VehicleData   *VehicleData                  `protobuf:"bytes,2,opt,name=vehicle_data,json=vehicleData,proto3" json:"vehicle_data,omitempty"`
	Mode          VehicleStateIf_Mode           `protobuf:"varint,3,opt,name=mode,proto3,enum=magothy.protobuf.autopilot.VehicleStateIf_Mode" json:"mode,omitempty"`
	HealthItems   []*VehicleStateIf_HealthItem  `protobuf:"bytes,4,rep,name=health_items,json=healthItems,proto3" json:"health_items,omitempty"`
	FaultResponse *VehicleStateIf_FaultResponse `protobuf:"bytes,5,opt,name=fault_response,json=faultResponse,proto3,oneof" json:"fault_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleStateIf) Reset() {
	*x = VehicleStateIf{}
	mi := &file_autopilot_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleStateIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleStateIf) ProtoMessage() {}

func (x *VehicleStateIf) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleStateIf.ProtoReflect.Descriptor instead.
func (*VehicleStateIf) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{20}
}

func (x *VehicleStateIf) GetTtagNs() uint64 {
	if x != nil {
		return x.TtagNs
	}
	return 0
}

func (x *VehicleStateIf) GetVehicleData() *VehicleData {
	if x != nil {
		return x.VehicleData
	}
	return nil
}

func (x *VehicleStateIf) GetMode() VehicleStateIf_Mode {
	if x != nil {
		return x.Mode
	}
	return VehicleStateIf_VS_STANDBY
}

func (x *VehicleStateIf) GetHealthItems() []*VehicleStateIf_HealthItem {
	if x != nil {
		return x.HealthItems
	}
	return nil
}

func (x *VehicleStateIf) GetFaultResponse() *VehicleStateIf_FaultResponse {
	if x != nil {
		return x.FaultResponse
	}
	return nil
}

type MavlinkMissionItemInt struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TargetSystem    uint32                 `protobuf:"varint,1,opt,name=target_system,json=targetSystem,proto3" json:"target_system,omitempty"`
	TargetComponent uint32                 `protobuf:"varint,2,opt,name=target_component,json=targetComponent,proto3" json:"target_component,omitempty"`
	MissionType     uint32                 `protobuf:"varint,3,opt,name=mission_type,json=missionType,proto3" json:"mission_type,omitempty"`
	Seq             uint32                 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	Command         uint32                 `protobuf:"varint,5,opt,name=command,proto3" json:"command,omitempty"`
	Frame           uint32                 `protobuf:"varint,6,opt,name=frame,proto3" json:"frame,omitempty"`
	Current         bool                   `protobuf:"varint,7,opt,name=current,proto3" json:"current,omitempty"`
	Autocontinue    bool                   `protobuf:"varint,8,opt,name=autocontinue,proto3" json:"autocontinue,omitempty"`
	Param1          float32                `protobuf:"fixed32,9,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2          float32                `protobuf:"fixed32,10,opt,name=param2,proto3" json:"param2,omitempty"`
	Param3          float32                `protobuf:"fixed32,11,opt,name=param3,proto3" json:"param3,omitempty"`
	Param4          float32                `protobuf:"fixed32,12,opt,name=param4,proto3" json:"param4,omitempty"`
	X               int32                  `protobuf:"varint,13,opt,name=x,proto3" json:"x,omitempty"`
	Y               int32                  `protobuf:"varint,14,opt,name=y,proto3" json:"y,omitempty"`
	Z               float32                `protobuf:"fixed32,15,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MavlinkMissionItemInt) Reset() {
	*x = MavlinkMissionItemInt{}
	mi := &file_autopilot_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MavlinkMissionItemInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MavlinkMissionItemInt) ProtoMessage() {}

func (x *MavlinkMissionItemInt) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MavlinkMissionItemInt.ProtoReflect.Descriptor instead.
func (*MavlinkMissionItemInt) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{21}
}

func (x *MavlinkMissionItemInt) GetTargetSystem() uint32 {
	if x != nil {
		return x.TargetSystem
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetTargetComponent() uint32 {
	if x != nil {
		return x.TargetComponent
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetMissionType() uint32 {
	if x != nil {
		return x.MissionType
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetCurrent() bool {
	if x != nil {
		return x.Current
	}
	return false
}

func (x *MavlinkMissionItemInt) GetAutocontinue() bool {
	if x != nil {
		return x.Autocontinue
	}
	return false
}

func (x *MavlinkMissionItemInt) GetParam1() float32 {
	if x != nil {
		return x.Param1
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetParam2() float32 {
	if x != nil {
		return x.Param2
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetParam3() float32 {
	if x != nil {
		return x.Param3
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetParam4() float32 {
	if x != nil {
		return x.Param4
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MavlinkMissionItemInt) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type MavlinkMission struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	MissionItems  []*MavlinkMissionItemInt `protobuf:"bytes,1,rep,name=mission_items,json=missionItems,proto3" json:"mission_items,omitempty"`
	FenceItems    []*MavlinkMissionItemInt `protobuf:"bytes,2,rep,name=fence_items,json=fenceItems,proto3" json:"fence_items,omitempty"`
	RallyItems    []*MavlinkMissionItemInt `protobuf:"bytes,3,rep,name=rally_items,json=rallyItems,proto3" json:"rally_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MavlinkMission) Reset() {
	*x = MavlinkMission{}
	mi := &file_autopilot_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MavlinkMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MavlinkMission) ProtoMessage() {}

func (x *MavlinkMission) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MavlinkMission.ProtoReflect.Descriptor instead.
func (*MavlinkMission) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{22}
}

func (x *MavlinkMission) GetMissionItems() []*MavlinkMissionItemInt {
	if x != nil {
		return x.MissionItems
	}
	return nil
}

func (x *MavlinkMission) GetFenceItems() []*MavlinkMissionItemInt {
	if x != nil {
		return x.FenceItems
	}
	return nil
}

func (x *MavlinkMission) GetRallyItems() []*MavlinkMissionItemInt {
	if x != nil {
		return x.RallyItems
	}
	return nil
}

type GpsIf_RmcData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatitudeDeg   *float64               `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3,oneof" json:"latitude_deg,omitempty"`         // use NaN to represent unset
	LongitudeDeg  *float64               `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3,oneof" json:"longitude_deg,omitempty"`      // use NaN to represent unset
	GroundSpeedKt *float64               `protobuf:"fixed64,3,opt,name=ground_speed_kt,json=groundSpeedKt,proto3,oneof" json:"ground_speed_kt,omitempty"` // use NaN to represent unset
	CourseTrueDeg *float64               `protobuf:"fixed64,4,opt,name=course_true_deg,json=courseTrueDeg,proto3,oneof" json:"course_true_deg,omitempty"` // use NaN to represent unset
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GpsIf_RmcData) Reset() {
	*x = GpsIf_RmcData{}
	mi := &file_autopilot_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GpsIf_RmcData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpsIf_RmcData) ProtoMessage() {}

func (x *GpsIf_RmcData) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpsIf_RmcData.ProtoReflect.Descriptor instead.
func (*GpsIf_RmcData) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GpsIf_RmcData) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *GpsIf_RmcData) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *GpsIf_RmcData) GetGroundSpeedKt() float64 {
	if x != nil && x.GroundSpeedKt != nil {
		return *x.GroundSpeedKt
	}
	return 0
}

func (x *GpsIf_RmcData) GetCourseTrueDeg() float64 {
	if x != nil && x.CourseTrueDeg != nil {
		return *x.CourseTrueDeg
	}
	return 0
}

type GpsIf_GgaData struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	LatitudeDeg   *float64                 `protobuf:"fixed64,1,opt,name=latitude_deg,json=latitudeDeg,proto3,oneof" json:"latitude_deg,omitempty"`    // use NaN to represent unset
	LongitudeDeg  *float64                 `protobuf:"fixed64,2,opt,name=longitude_deg,json=longitudeDeg,proto3,oneof" json:"longitude_deg,omitempty"` // use NaN to represent unset
	AltitudeM     *float64                 `protobuf:"fixed64,3,opt,name=altitude_m,json=altitudeM,proto3,oneof" json:"altitude_m,omitempty"`          // use NaN to represent unset
	NumSatellite  *int32                   `protobuf:"varint,4,opt,name=num_satellite,json=numSatellite,proto3,oneof" json:"num_satellite,omitempty"`  // use < 0 to represent unset
	FixQuality    GpsIf_GgaData_FixQuality `protobuf:"varint,5,opt,name=fix_quality,json=fixQuality,proto3,enum=magothy.protobuf.autopilot.GpsIf_GgaData_FixQuality" json:"fix_quality,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GpsIf_GgaData) Reset() {
	*x = GpsIf_GgaData{}
	mi := &file_autopilot_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GpsIf_GgaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpsIf_GgaData) ProtoMessage() {}

func (x *GpsIf_GgaData) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpsIf_GgaData.ProtoReflect.Descriptor instead.
func (*GpsIf_GgaData) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{16, 1}
}

func (x *GpsIf_GgaData) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *GpsIf_GgaData) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *GpsIf_GgaData) GetAltitudeM() float64 {
	if x != nil && x.AltitudeM != nil {
		return *x.AltitudeM
	}
	return 0
}

func (x *GpsIf_GgaData) GetNumSatellite() int32 {
	if x != nil && x.NumSatellite != nil {
		return *x.NumSatellite
	}
	return 0
}

func (x *GpsIf_GgaData) GetFixQuality() GpsIf_GgaData_FixQuality {
	if x != nil {
		return x.FixQuality
	}
	return GpsIf_GgaData_FQ_INVALID
}

type ObstacleIf_Circle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Origin        *Position              `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	RadiusM       float64                `protobuf:"fixed64,2,opt,name=radius_m,json=radiusM,proto3" json:"radius_m,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObstacleIf_Circle) Reset() {
	*x = ObstacleIf_Circle{}
	mi := &file_autopilot_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObstacleIf_Circle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleIf_Circle) ProtoMessage() {}

func (x *ObstacleIf_Circle) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleIf_Circle.ProtoReflect.Descriptor instead.
func (*ObstacleIf_Circle) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ObstacleIf_Circle) GetOrigin() *Position {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ObstacleIf_Circle) GetRadiusM() float64 {
	if x != nil {
		return x.RadiusM
	}
	return 0
}

type ObstacleIf_Polygon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vertices      []*Position            `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObstacleIf_Polygon) Reset() {
	*x = ObstacleIf_Polygon{}
	mi := &file_autopilot_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObstacleIf_Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstacleIf_Polygon) ProtoMessage() {}

func (x *ObstacleIf_Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstacleIf_Polygon.ProtoReflect.Descriptor instead.
func (*ObstacleIf_Polygon) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{17, 1}
}

func (x *ObstacleIf_Polygon) GetVertices() []*Position {
	if x != nil {
		return x.Vertices
	}
	return nil
}

type VehicleStateIf_HealthItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                          // also priority - smaller number is higher priority
	Uid           string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`                               // unique identifier
	SensorId      uint32                 `protobuf:"varint,3,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`    // status id for mavlink
	IsValid       bool                   `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`       // true if properly configured, false otherwise
	Enabled       bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`                      // true if enabled
	IsHealthy     bool                   `protobuf:"varint,6,opt,name=is_healthy,json=isHealthy,proto3" json:"is_healthy,omitempty"` // true on healthy, false on faulted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleStateIf_HealthItem) Reset() {
	*x = VehicleStateIf_HealthItem{}
	mi := &file_autopilot_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleStateIf_HealthItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleStateIf_HealthItem) ProtoMessage() {}

func (x *VehicleStateIf_HealthItem) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleStateIf_HealthItem.ProtoReflect.Descriptor instead.
func (*VehicleStateIf_HealthItem) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{20, 0}
}

func (x *VehicleStateIf_HealthItem) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *VehicleStateIf_HealthItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *VehicleStateIf_HealthItem) GetSensorId() uint32 {
	if x != nil {
		return x.SensorId
	}
	return 0
}

func (x *VehicleStateIf_HealthItem) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *VehicleStateIf_HealthItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *VehicleStateIf_HealthItem) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

type VehicleStateIf_FaultResponse struct {
	state           protoimpl.MessageState           `protogen:"open.v1"`
	ResponseType    VehicleStateIf_FaultResponseType `protobuf:"varint,1,opt,name=response_type,json=responseType,proto3,enum=magothy.protobuf.autopilot.VehicleStateIf_FaultResponseType" json:"response_type,omitempty"`
	HealthItemIndex uint32                           `protobuf:"varint,2,opt,name=health_item_index,json=healthItemIndex,proto3" json:"health_item_index,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VehicleStateIf_FaultResponse) Reset() {
	*x = VehicleStateIf_FaultResponse{}
	mi := &file_autopilot_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleStateIf_FaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleStateIf_FaultResponse) ProtoMessage() {}

func (x *VehicleStateIf_FaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autopilot_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleStateIf_FaultResponse.ProtoReflect.Descriptor instead.
func (*VehicleStateIf_FaultResponse) Descriptor() ([]byte, []int) {
	return file_autopilot_proto_rawDescGZIP(), []int{20, 1}
}

func (x *VehicleStateIf_FaultResponse) GetResponseType() VehicleStateIf_FaultResponseType {
	if x != nil {
		return x.ResponseType
	}
	return VehicleStateIf_FR_IGNORE
}

func (x *VehicleStateIf_FaultResponse) GetHealthItemIndex() uint32 {
	if x != nil {
		return x.HealthItemIndex
	}
	return 0
}

var File_autopilot_proto protoreflect.FileDescriptor

const file_autopilot_proto_rawDesc = "" +
	"\n" +
	"\x0fautopilot.proto\x12\x1amagothy.protobuf.autopilot\x1a\x1fgoogle/protobuf/timestamp.proto\"R\n" +
	"\bPosition\x12!\n" +
	"\flatitude_deg\x18\x01 \x01(\x01R\vlatitudeDeg\x12#\n" +
	"\rlongitude_deg\x18\x02 \x01(\x01R\flongitudeDeg\"L\n" +
	"\vAngularRate\x12\x13\n" +
	"\x05x_dps\x18\x01 \x01(\x01R\x04xDps\x12\x13\n" +
	"\x05y_dps\x18\x02 \x01(\x01R\x04yDps\x12\x13\n" +
	"\x05z_dps\x18\x03 \x01(\x01R\x04zDps\"S\n" +
	"\fAcceleration\x12\x15\n" +
	"\x06x_mps2\x18\x01 \x01(\x01R\x05xMps2\x12\x15\n" +
	"\x06y_mps2\x18\x02 \x01(\x01R\x05yMps2\x12\x15\n" +
	"\x06z_mps2\x18\x03 \x01(\x01R\x05zMps2\"Z\n" +
	"\rMagneticField\x12\x17\n" +
	"\ax_gauss\x18\x01 \x01(\x01R\x06xGauss\x12\x17\n" +
	"\ay_gauss\x18\x02 \x01(\x01R\x06yGauss\x12\x17\n" +
	"\az_gauss\x18\x03 \x01(\x01R\x06zGauss\"`\n" +
	"\x05Euler\x12\x19\n" +
	"\broll_deg\x18\x01 \x01(\x01R\arollDeg\x12\x1b\n" +
	"\tpitch_deg\x18\x02 \x01(\x01R\bpitchDeg\x12\x1f\n" +
	"\vheading_deg\x18\x03 \x01(\x01R\n" +
	"headingDeg\"M\n" +
	"\fBodyVelocity\x12\x13\n" +
	"\x05x_mps\x18\x01 \x01(\x01R\x04xMps\x12\x13\n" +
	"\x05y_mps\x18\x02 \x01(\x01R\x04yMps\x12\x13\n" +
	"\x05z_mps\x18\x03 \x01(\x01R\x04zMps\"e\n" +
	"\x10InertialVelocity\x12\x1b\n" +
	"\tnorth_mps\x18\x01 \x01(\x01R\bnorthMps\x12\x19\n" +
	"\beast_mps\x18\x02 \x01(\x01R\aeastMps\x12\x19\n" +
	"\bdown_mps\x18\x03 \x01(\x01R\adownMps\"P\n" +
	"\fWaterCurrent\x12\x1b\n" +
	"\tspeed_mps\x18\x01 \x01(\x01R\bspeedMps\x12#\n" +
	"\rdirection_deg\x18\x02 \x01(\x01R\fdirectionDeg\"|\n" +
	"\tFuelGauge\x12\x1b\n" +
	"\tvoltage_V\x18\x01 \x01(\x01R\bvoltageV\x12\x1b\n" +
	"\tcurrent_A\x18\x02 \x01(\x01R\bcurrentA\x125\n" +
	"\x17state_of_charge_percent\x18\x03 \x01(\x01R\x14stateOfChargePercent\"\xc7\x19\n" +
	"\vVehicleData\x12E\n" +
	"\bposition\x18\x01 \x01(\v2$.magothy.protobuf.autopilot.PositionH\x00R\bposition\x88\x01\x01\x12[\n" +
	"\x0fposition_source\x18\x02 \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x0epositionSource\x125\n" +
	"\x17position_ttag_ns_steady\x18\x03 \x01(\x04R\x14positionTtagNsSteady\x12B\n" +
	"\battitude\x18\x04 \x01(\v2!.magothy.protobuf.autopilot.EulerH\x01R\battitude\x88\x01\x01\x12[\n" +
	"\x0fattitude_source\x18\x05 \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x0eattitudeSource\x125\n" +
	"\x17attitude_ttag_ns_steady\x18\x06 \x01(\x04R\x14attitudeTtagNsSteady\x12O\n" +
	"\fangular_rate\x18\a \x01(\v2'.magothy.protobuf.autopilot.AngularRateH\x02R\vangularRate\x88\x01\x01\x12b\n" +
	"\x13angular_rate_source\x18\b \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x11angularRateSource\x12<\n" +
	"\x1bangular_rate_ttag_ns_steady\x18\t \x01(\x04R\x17angularRateTtagNsSteady\x12Q\n" +
	"\facceleration\x18\n" +
	" \x01(\v2(.magothy.protobuf.autopilot.AccelerationH\x03R\facceleration\x88\x01\x01\x12c\n" +
	"\x13acceleration_source\x18\v \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x12accelerationSource\x12=\n" +
	"\x1bacceleration_ttag_ns_steady\x18\f \x01(\x04R\x18accelerationTtagNsSteady\x12U\n" +
	"\x0emagnetic_field\x18\r \x01(\v2).magothy.protobuf.autopilot.MagneticFieldH\x04R\rmagneticField\x88\x01\x01\x12f\n" +
	"\x15magnetic_field_source\x18\x0e \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x13magneticFieldSource\x12@\n" +
	"\x1dmagnetic_field_ttag_ns_steady\x18\x0f \x01(\x04R\x19magneticFieldTtagNsSteady\x12\x1c\n" +
	"\adepth_m\x18\x10 \x01(\x01H\x05R\x06depthM\x88\x01\x01\x12U\n" +
	"\fdepth_source\x18\x11 \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\vdepthSource\x12/\n" +
	"\x14depth_ttag_ns_steady\x18\x12 \x01(\x04R\x11depthTtagNsSteady\x12\"\n" +
	"\n" +
	"altitude_m\x18\x13 \x01(\x01H\x06R\taltitudeM\x88\x01\x01\x12[\n" +
	"\x0faltitude_source\x18\x14 \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x0ealtitudeSource\x125\n" +
	"\x17altitude_ttag_ns_steady\x18\x15 \x01(\x04R\x14altitudeTtagNsSteady\x12 \n" +
	"\tspeed_mps\x18\x16 \x01(\x01H\aR\bspeedMps\x88\x01\x01\x12U\n" +
	"\fspeed_source\x18\x17 \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\vspeedSource\x12/\n" +
	"\x14speed_ttag_ns_steady\x18\x18 \x01(\x04R\x11speedTtagNsSteady\x12\"\n" +
	"\n" +
	"course_deg\x18\x19 \x01(\x01H\bR\tcourseDeg\x88\x01\x01\x12W\n" +
	"\rcourse_source\x18\x1a \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\fcourseSource\x121\n" +
	"\x15course_ttag_ns_steady\x18\x1b \x01(\x04R\x12courseTtagNsSteady\x12R\n" +
	"\rbody_velocity\x18\x1c \x01(\v2(.magothy.protobuf.autopilot.BodyVelocityH\tR\fbodyVelocity\x88\x01\x01\x12d\n" +
	"\x14body_velocity_source\x18\x1d \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x12bodyVelocitySource\x12>\n" +
	"\x1cbody_velocity_ttag_ns_steady\x18\x1e \x01(\x04R\x18bodyVelocityTtagNsSteady\x12R\n" +
	"\rwater_current\x18\x1f \x01(\v2(.magothy.protobuf.autopilot.WaterCurrentH\n" +
	"R\fwaterCurrent\x88\x01\x01\x12d\n" +
	"\x14water_current_source\x18  \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x12waterCurrentSource\x12>\n" +
	"\x1cwater_current_ttag_ns_steady\x18! \x01(\x04R\x18waterCurrentTtagNsSteady\x12<\n" +
	"\x18water_relative_speed_mps\x18\" \x01(\x01H\vR\x15waterRelativeSpeedMps\x88\x01\x01\x12q\n" +
	"\x1bwater_relative_speed_source\x18# \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x18waterRelativeSpeedSource\x12K\n" +
	"#water_relative_speed_ttag_ns_steady\x18$ \x01(\x04R\x1ewaterRelativeSpeedTtagNsSteady\x12I\n" +
	"\n" +
	"fuel_gauge\x18% \x01(\v2%.magothy.protobuf.autopilot.FuelGaugeH\fR\tfuelGauge\x88\x01\x01\x12^\n" +
	"\x11fuel_gauge_source\x18& \x01(\x0e22.magothy.protobuf.autopilot.VehicleData.DataSourceR\x0ffuelGaugeSource\x128\n" +
	"\x19fuel_gauge_ttag_ns_steady\x18' \x01(\x04R\x15fuelGaugeTtagNsSteady\"\xb3\x01\n" +
	"\n" +
	"DataSource\x12\r\n" +
	"\tDS_NODATA\x10\x00\x12\n" +
	"\n" +
	"\x06DS_IMU\x10\x01\x12\v\n" +
	"\aDS_AHRS\x10\x02\x12\n" +
	"\n" +
	"\x06DS_GPS\x10\x03\x12\f\n" +
	"\bDS_DEPTH\x10\x04\x12\x0f\n" +
	"\vDS_ALTITUDE\x10\x05\x12\f\n" +
	"\bDS_SPEED\x10\x06\x12\x11\n" +
	"\rDS_ESTIMATION\x10\a\x12\x12\n" +
	"\x0eDS_COMPUTATION\x10\b\x12\x11\n" +
	"\rDS_SIMULATION\x10\t\x12\n" +
	"\n" +
	"\x06DS_INS\x10\n" +
	"B\v\n" +
	"\t_positionB\v\n" +
	"\t_attitudeB\x0f\n" +
	"\r_angular_rateB\x0f\n" +
	"\r_accelerationB\x11\n" +
	"\x0f_magnetic_fieldB\n" +
	"\n" +
	"\b_depth_mB\r\n" +
	"\v_altitude_mB\f\n" +
	"\n" +
	"_speed_mpsB\r\n" +
	"\v_course_degB\x10\n" +
	"\x0e_body_velocityB\x10\n" +
	"\x0e_water_currentB\x1b\n" +
	"\x19_water_relative_speed_mpsB\r\n" +
	"\v_fuel_gauge\"\xef\x02\n" +
	"\x06AhrsIf\x12O\n" +
	"\fangular_rate\x18\x01 \x01(\v2'.magothy.protobuf.autopilot.AngularRateH\x00R\vangularRate\x88\x01\x01\x12Q\n" +
	"\facceleration\x18\x02 \x01(\v2(.magothy.protobuf.autopilot.AccelerationH\x01R\facceleration\x88\x01\x01\x12J\n" +
	"\bmagfield\x18\x03 \x01(\v2).magothy.protobuf.autopilot.MagneticFieldH\x02R\bmagfield\x88\x01\x01\x12<\n" +
	"\x05euler\x18\x04 \x01(\v2!.magothy.protobuf.autopilot.EulerH\x03R\x05euler\x88\x01\x01B\x0f\n" +
	"\r_angular_rateB\x0f\n" +
	"\r_accelerationB\v\n" +
	"\t_magfieldB\b\n" +
	"\x06_euler\"?\n" +
	"\n" +
	"AltitudeIf\x12\"\n" +
	"\n" +
	"altitude_m\x18\x01 \x01(\x01H\x00R\taltitudeM\x88\x01\x01B\r\n" +
	"\v_altitude_m\"\xc3\x01\n" +
	"\tBatteryIf\x12 \n" +
	"\tvoltage_V\x18\x01 \x01(\x01H\x00R\bvoltageV\x88\x01\x01\x12 \n" +
	"\tcurrent_A\x18\x02 \x01(\x01H\x01R\bcurrentA\x88\x01\x01\x12:\n" +
	"\x17state_of_charge_percent\x18\x03 \x01(\x05H\x02R\x14stateOfChargePercent\x88\x01\x01B\f\n" +
	"\n" +
	"_voltage_VB\f\n" +
	"\n" +
	"_current_AB\x1a\n" +
	"\x18_state_of_charge_percent\"3\n" +
	"\aDepthIf\x12\x1c\n" +
	"\adepth_m\x18\x01 \x01(\x01H\x00R\x06depthM\x88\x01\x01B\n" +
	"\n" +
	"\b_depth_m\"&\n" +
	"\n" +
	"EffectorIf\x12\x18\n" +
	"\acommand\x18\x01 \x03(\x01R\acommand\"\x9e\x05\n" +
	"\x05InsIf\x12O\n" +
	"\fangular_rate\x18\x01 \x01(\v2'.magothy.protobuf.autopilot.AngularRateH\x00R\vangularRate\x88\x01\x01\x12Q\n" +
	"\facceleration\x18\x02 \x01(\v2(.magothy.protobuf.autopilot.AccelerationH\x01R\facceleration\x88\x01\x01\x12J\n" +
	"\bmagfield\x18\x03 \x01(\v2).magothy.protobuf.autopilot.MagneticFieldH\x02R\bmagfield\x88\x01\x01\x12<\n" +
	"\x05euler\x18\x04 \x01(\v2!.magothy.protobuf.autopilot.EulerH\x03R\x05euler\x88\x01\x01\x12R\n" +
	"\rbody_velocity\x18\x05 \x01(\v2(.magothy.protobuf.autopilot.BodyVelocityH\x04R\fbodyVelocity\x88\x01\x01\x12E\n" +
	"\bposition\x18\x06 \x01(\v2$.magothy.protobuf.autopilot.PositionH\x05R\bposition\x88\x01\x01\x12^\n" +
	"\x11inertial_velocity\x18\a \x01(\v2,.magothy.protobuf.autopilot.InertialVelocityH\x06R\x10inertialVelocity\x88\x01\x01B\x0f\n" +
	"\r_angular_rateB\x0f\n" +
	"\r_accelerationB\v\n" +
	"\t_magfieldB\b\n" +
	"\x06_eulerB\x10\n" +
	"\x0e_body_velocityB\v\n" +
	"\t_positionB\x14\n" +
	"\x12_inertial_velocity\"\x9d\a\n" +
	"\x05GpsIf\x12I\n" +
	"\brmc_data\x18\x01 \x01(\v2).magothy.protobuf.autopilot.GpsIf.RmcDataH\x00R\armcData\x88\x01\x01\x12I\n" +
	"\bgga_data\x18\x02 \x01(\v2).magothy.protobuf.autopilot.GpsIf.GgaDataH\x01R\aggaData\x88\x01\x01\x1a\x80\x02\n" +
	"\aRmcData\x12&\n" +
	"\flatitude_deg\x18\x01 \x01(\x01H\x00R\vlatitudeDeg\x88\x01\x01\x12(\n" +
	"\rlongitude_deg\x18\x02 \x01(\x01H\x01R\flongitudeDeg\x88\x01\x01\x12+\n" +
	"\x0fground_speed_kt\x18\x03 \x01(\x01H\x02R\rgroundSpeedKt\x88\x01\x01\x12+\n" +
	"\x0fcourse_true_deg\x18\x04 \x01(\x01H\x03R\rcourseTrueDeg\x88\x01\x01B\x0f\n" +
	"\r_latitude_degB\x10\n" +
	"\x0e_longitude_degB\x12\n" +
	"\x10_ground_speed_ktB\x12\n" +
	"\x10_course_true_deg\x1a\xe0\x03\n" +
	"\aGgaData\x12&\n" +
	"\flatitude_deg\x18\x01 \x01(\x01H\x00R\vlatitudeDeg\x88\x01\x01\x12(\n" +
	"\rlongitude_deg\x18\x02 \x01(\x01H\x01R\flongitudeDeg\x88\x01\x01\x12\"\n" +
	"\n" +
	"altitude_m\x18\x03 \x01(\x01H\x02R\taltitudeM\x88\x01\x01\x12(\n" +
	"\rnum_satellite\x18\x04 \x01(\x05H\x03R\fnumSatellite\x88\x01\x01\x12U\n" +
	"\vfix_quality\x18\x05 \x01(\x0e24.magothy.protobuf.autopilot.GpsIf.GgaData.FixQualityR\n" +
	"fixQuality\"\x99\x01\n" +
	"\n" +
	"FixQuality\x12\x0e\n" +
	"\n" +
	"FQ_INVALID\x10\x00\x12\n" +
	"\n" +
	"\x06FQ_GPS\x10\x01\x12\v\n" +
	"\aFQ_DGPS\x10\x02\x12\n" +
	"\n" +
	"\x06FQ_PPS\x10\x03\x12\x10\n" +
	"\fFQ_RTK_FIXED\x10\x04\x12\x10\n" +
	"\fFQ_RTK_FLOAT\x10\x05\x12\x10\n" +
	"\fFQ_ESTIMATED\x10\x06\x12\r\n" +
	"\tFQ_MANUAL\x10\a\x12\x11\n" +
	"\rFQ_SIMULATION\x10\bB\x0f\n" +
	"\r_latitude_degB\x10\n" +
	"\x0e_longitude_degB\r\n" +
	"\v_altitude_mB\x10\n" +
	"\x0e_num_satelliteB\v\n" +
	"\t_rmc_dataB\v\n" +
	"\t_gga_data\"\xa4\a\n" +
	"\n" +
	"ObstacleIf\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12G\n" +
	"\x06circle\x18\x02 \x01(\v2-.magothy.protobuf.autopilot.ObstacleIf.CircleH\x00R\x06circle\x12J\n" +
	"\apolygon\x18\x03 \x01(\v2..magothy.protobuf.autopilot.ObstacleIf.PolygonH\x00R\apolygon\x12L\n" +
	"\tzone_type\x18\x04 \x01(\x0e2/.magothy.protobuf.autopilot.ObstacleIf.ZoneTypeR\bzoneType\x12#\n" +
	"\ris_stationary\x18\x05 \x01(\bR\fisStationary\x12\x1d\n" +
	"\n" +
	"lifespan_s\x18\x06 \x01(\x01R\tlifespanS\x12\"\n" +
	"\n" +
	"course_deg\x18\a \x01(\x01H\x01R\tcourseDeg\x88\x01\x01\x12 \n" +
	"\tspeed_mps\x18\b \x01(\x01H\x02R\bspeedMps\x88\x01\x01\x12U\n" +
	"\x11point_of_interest\x18\t \x01(\v2$.magothy.protobuf.autopilot.PositionH\x03R\x0fpointOfInterest\x88\x01\x01\x12W\n" +
	"\vintent_type\x18\n" +
	" \x01(\x0e21.magothy.protobuf.autopilot.ObstacleIf.IntentTypeH\x04R\n" +
	"intentType\x88\x01\x01\x1aa\n" +
	"\x06Circle\x12<\n" +
	"\x06origin\x18\x01 \x01(\v2$.magothy.protobuf.autopilot.PositionR\x06origin\x12\x19\n" +
	"\bradius_m\x18\x02 \x01(\x01R\aradiusM\x1aK\n" +
	"\aPolygon\x12@\n" +
	"\bvertices\x18\x01 \x03(\v2$.magothy.protobuf.autopilot.PositionR\bvertices\"/\n" +
	"\bZoneType\x12\x11\n" +
	"\rZONE_KEEP_OUT\x10\x00\x12\x10\n" +
	"\fZONE_KEEP_IN\x10\x01\"4\n" +
	"\n" +
	"IntentType\x12\f\n" +
	"\bFRIENDLY\x10\x00\x12\v\n" +
	"\aHOSTILE\x10\x01\x12\v\n" +
	"\aUNKNOWN\x10\x02B\x0f\n" +
	"\rObstacleOneOfB\r\n" +
	"\v_course_degB\f\n" +
	"\n" +
	"_speed_mpsB\x14\n" +
	"\x12_point_of_interestB\x0e\n" +
	"\f_intent_type\"\xb4\x01\n" +
	"\tObstacles\x12;\n" +
	"\vttag_system\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ttagSystem\x12$\n" +
	"\x0ettag_steady_ns\x18\x02 \x01(\x04R\fttagSteadyNs\x12D\n" +
	"\tobstacles\x18\x03 \x03(\v2&.magothy.protobuf.autopilot.ObstacleIfR\tobstacles\"\xda\x04\n" +
	"\x04Path\x12;\n" +
	"\vttag_system\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ttagSystem\x12$\n" +
	"\x0ettag_steady_ns\x18\x02 \x01(\x04R\fttagSteadyNs\x128\n" +
	"\x04path\x18\x03 \x03(\v2$.magothy.protobuf.autopilot.PositionR\x04path\x12D\n" +
	"\tobstacles\x18\x04 \x03(\v2&.magothy.protobuf.autopilot.ObstacleIfR\tobstacles\x12 \n" +
	"\tspeed_mps\x18\x05 \x01(\x01H\x00R\bspeedMps\x88\x01\x01\x12?\n" +
	"\x05start\x18\x06 \x01(\v2$.magothy.protobuf.autopilot.PositionH\x01R\x05start\x88\x01\x01\x12F\n" +
	"\tend_local\x18\a \x01(\v2$.magothy.protobuf.autopilot.PositionH\x02R\bendLocal\x88\x01\x01\x12H\n" +
	"\n" +
	"end_global\x18\b \x01(\v2$.magothy.protobuf.autopilot.PositionH\x03R\tendGlobal\x88\x01\x01\x12E\n" +
	"\vglobal_path\x18\t \x03(\v2$.magothy.protobuf.autopilot.PositionR\n" +
	"globalPathB\f\n" +
	"\n" +
	"_speed_mpsB\b\n" +
	"\x06_startB\f\n" +
	"\n" +
	"_end_localB\r\n" +
	"\v_end_global\"\x8f\b\n" +
	"\x0eVehicleStateIf\x12\x17\n" +
	"\attag_ns\x18\x01 \x01(\x04R\x06ttagNs\x12J\n" +
	"\fvehicle_data\x18\x02 \x01(\v2'.magothy.protobuf.autopilot.VehicleDataR\vvehicleData\x12C\n" +
	"\x04mode\x18\x03 \x01(\x0e2/.magothy.protobuf.autopilot.VehicleStateIf.ModeR\x04mode\x12X\n" +
	"\fhealth_items\x18\x04 \x03(\v25.magothy.protobuf.autopilot.VehicleStateIf.HealthItemR\vhealthItems\x12d\n" +
	"\x0efault_response\x18\x05 \x01(\v28.magothy.protobuf.autopilot.VehicleStateIf.FaultResponseH\x00R\rfaultResponse\x88\x01\x01\x1a\xa5\x01\n" +
	"\n" +
	"HealthItem\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\tR\x03uid\x12\x1b\n" +
	"\tsensor_id\x18\x03 \x01(\rR\bsensorId\x12\x19\n" +
	"\bis_valid\x18\x04 \x01(\bR\aisValid\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"is_healthy\x18\x06 \x01(\bR\tisHealthy\x1a\x9e\x01\n" +
	"\rFaultResponse\x12a\n" +
	"\rresponse_type\x18\x01 \x01(\x0e2<.magothy.protobuf.autopilot.VehicleStateIf.FaultResponseTypeR\fresponseType\x12*\n" +
	"\x11health_item_index\x18\x02 \x01(\rR\x0fhealthItemIndex\"\xa2\x01\n" +
	"\x04Mode\x12\x0e\n" +
	"\n" +
	"VS_STANDBY\x10\x00\x12\r\n" +
	"\tVS_MANUAL\x10\x01\x12\x16\n" +
	"\x12VS_HEALTHY_MISSION\x10\x02\x12\x18\n" +
	"\x14VS_UNHEALTHY_MISSION\x10\x03\x12\r\n" +
	"\tVS_LOITER\x10\x04\x12\x17\n" +
	"\x13VS_MISSION_PLANNING\x10\x05\x12!\n" +
	"\x1dVS_UNHEALTHY_MISSION_PLANNING\x10\x06\"\x91\x01\n" +
	"\x11FaultResponseType\x12\r\n" +
	"\tFR_IGNORE\x10\x00\x12\v\n" +
	"\aFR_HALT\x10\x01\x12\r\n" +
	"\tFR_LOITER\x10\x02\x12\x0f\n" +
	"\vFR_GO_RALLY\x10\x03\x12\x0f\n" +
	"\vFR_GO_FIRST\x10\x04\x12\x0e\n" +
	"\n" +
	"FR_GO_LAST\x10\x05\x12\x10\n" +
	"\fFR_GO_LAUNCH\x10\x06\x12\r\n" +
	"\tFR_CUSTOM\x10\aB\x11\n" +
	"\x0f_fault_response\"\x94\x03\n" +
	"\x15MavlinkMissionItemInt\x12#\n" +
	"\rtarget_system\x18\x01 \x01(\rR\ftargetSystem\x12)\n" +
	"\x10target_component\x18\x02 \x01(\rR\x0ftargetComponent\x12!\n" +
	"\fmission_type\x18\x03 \x01(\rR\vmissionType\x12\x10\n" +
	"\x03seq\x18\x04 \x01(\rR\x03seq\x12\x18\n" +
	"\acommand\x18\x05 \x01(\rR\acommand\x12\x14\n" +
	"\x05frame\x18\x06 \x01(\rR\x05frame\x12\x18\n" +
	"\acurrent\x18\a \x01(\bR\acurrent\x12\"\n" +
	"\fautocontinue\x18\b \x01(\bR\fautocontinue\x12\x16\n" +
	"\x06param1\x18\t \x01(\x02R\x06param1\x12\x16\n" +
	"\x06param2\x18\n" +
	" \x01(\x02R\x06param2\x12\x16\n" +
	"\x06param3\x18\v \x01(\x02R\x06param3\x12\x16\n" +
	"\x06param4\x18\f \x01(\x02R\x06param4\x12\f\n" +
	"\x01x\x18\r \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x0e \x01(\x05R\x01y\x12\f\n" +
	"\x01z\x18\x0f \x01(\x02R\x01z\"\x90\x02\n" +
	"\x0eMavlinkMission\x12V\n" +
	"\rmission_items\x18\x01 \x03(\v21.magothy.protobuf.autopilot.MavlinkMissionItemIntR\fmissionItems\x12R\n" +
	"\vfence_items\x18\x02 \x03(\v21.magothy.protobuf.autopilot.MavlinkMissionItemIntR\n" +
	"fenceItems\x12R\n" +
	"\vrally_items\x18\x03 \x03(\v21.magothy.protobuf.autopilot.MavlinkMissionItemIntR\n" +
	"rallyItemsb\x06proto3"

var (
	file_autopilot_proto_rawDescOnce sync.Once
	file_autopilot_proto_rawDescData []byte
)

func file_autopilot_proto_rawDescGZIP() []byte {
	file_autopilot_proto_rawDescOnce.Do(func() {
		file_autopilot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_autopilot_proto_rawDesc), len(file_autopilot_proto_rawDesc)))
	})
	return file_autopilot_proto_rawDescData
}

var file_autopilot_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_autopilot_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_autopilot_proto_goTypes = []any{
	(VehicleData_DataSource)(0),           // 0: magothy.protobuf.autopilot.VehicleData.DataSource
	(GpsIf_GgaData_FixQuality)(0),         // 1: magothy.protobuf.autopilot.GpsIf.GgaData.FixQuality
	(ObstacleIf_ZoneType)(0),              // 2: magothy.protobuf.autopilot.ObstacleIf.ZoneType
	(ObstacleIf_IntentType)(0),            // 3: magothy.protobuf.autopilot.ObstacleIf.IntentType
	(VehicleStateIf_Mode)(0),              // 4: magothy.protobuf.autopilot.VehicleStateIf.Mode
	(VehicleStateIf_FaultResponseType)(0), // 5: magothy.protobuf.autopilot.VehicleStateIf.FaultResponseType
	(*Position)(nil),                      // 6: magothy.protobuf.autopilot.Position
	(*AngularRate)(nil),                   // 7: magothy.protobuf.autopilot.AngularRate
	(*Acceleration)(nil),                  // 8: magothy.protobuf.autopilot.Acceleration
	(*MagneticField)(nil),                 // 9: magothy.protobuf.autopilot.MagneticField
	(*Euler)(nil),                         // 10: magothy.protobuf.autopilot.Euler
	(*BodyVelocity)(nil),                  // 11: magothy.protobuf.autopilot.BodyVelocity
	(*InertialVelocity)(nil),              // 12: magothy.protobuf.autopilot.InertialVelocity
	(*WaterCurrent)(nil),                  // 13: magothy.protobuf.autopilot.WaterCurrent
	(*FuelGauge)(nil),                     // 14: magothy.protobuf.autopilot.FuelGauge
	(*VehicleData)(nil),                   // 15: magothy.protobuf.autopilot.VehicleData
	(*AhrsIf)(nil),                        // 16: magothy.protobuf.autopilot.AhrsIf
	(*AltitudeIf)(nil),                    // 17: magothy.protobuf.autopilot.AltitudeIf
	(*BatteryIf)(nil),                     // 18: magothy.protobuf.autopilot.BatteryIf
	(*DepthIf)(nil),                       // 19: magothy.protobuf.autopilot.DepthIf
	(*EffectorIf)(nil),                    // 20: magothy.protobuf.autopilot.EffectorIf
	(*InsIf)(nil),                         // 21: magothy.protobuf.autopilot.InsIf
	(*GpsIf)(nil),                         // 22: magothy.protobuf.autopilot.GpsIf
	(*ObstacleIf)(nil),                    // 23: magothy.protobuf.autopilot.ObstacleIf
	(*Obstacles)(nil),                     // 24: magothy.protobuf.autopilot.Obstacles
	(*Path)(nil),                          // 25: magothy.protobuf.autopilot.Path
	(*VehicleStateIf)(nil),                // 26: magothy.protobuf.autopilot.VehicleStateIf
	(*MavlinkMissionItemInt)(nil),         // 27: magothy.protobuf.autopilot.MavlinkMissionItemInt
	(*MavlinkMission)(nil),                // 28: magothy.protobuf.autopilot.MavlinkMission
	(*GpsIf_RmcData)(nil),                 // 29: magothy.protobuf.autopilot.GpsIf.RmcData
	(*GpsIf_GgaData)(nil),                 // 30: magothy.protobuf.autopilot.GpsIf.GgaData
	(*ObstacleIf_Circle)(nil),             // 31: magothy.protobuf.autopilot.ObstacleIf.Circle
	(*ObstacleIf_Polygon)(nil),            // 32: magothy.protobuf.autopilot.ObstacleIf.Polygon
	(*VehicleStateIf_HealthItem)(nil),     // 33: magothy.protobuf.autopilot.VehicleStateIf.HealthItem
	(*VehicleStateIf_FaultResponse)(nil),  // 34: magothy.protobuf.autopilot.VehicleStateIf.FaultResponse
	(*timestamppb.Timestamp)(nil),         // 35: google.protobuf.Timestamp
}
var file_autopilot_proto_depIdxs = []int32{
	6,  // 0: magothy.protobuf.autopilot.VehicleData.position:type_name -> magothy.protobuf.autopilot.Position
	0,  // 1: magothy.protobuf.autopilot.VehicleData.position_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	10, // 2: magothy.protobuf.autopilot.VehicleData.attitude:type_name -> magothy.protobuf.autopilot.Euler
	0,  // 3: magothy.protobuf.autopilot.VehicleData.attitude_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	7,  // 4: magothy.protobuf.autopilot.VehicleData.angular_rate:type_name -> magothy.protobuf.autopilot.AngularRate
	0,  // 5: magothy.protobuf.autopilot.VehicleData.angular_rate_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	8,  // 6: magothy.protobuf.autopilot.VehicleData.acceleration:type_name -> magothy.protobuf.autopilot.Acceleration
	0,  // 7: magothy.protobuf.autopilot.VehicleData.acceleration_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	9,  // 8: magothy.protobuf.autopilot.VehicleData.magnetic_field:type_name -> magothy.protobuf.autopilot.MagneticField
	0,  // 9: magothy.protobuf.autopilot.VehicleData.magnetic_field_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	0,  // 10: magothy.protobuf.autopilot.VehicleData.depth_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	0,  // 11: magothy.protobuf.autopilot.VehicleData.altitude_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	0,  // 12: magothy.protobuf.autopilot.VehicleData.speed_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	0,  // 13: magothy.protobuf.autopilot.VehicleData.course_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	11, // 14: magothy.protobuf.autopilot.VehicleData.body_velocity:type_name -> magothy.protobuf.autopilot.BodyVelocity
	0,  // 15: magothy.protobuf.autopilot.VehicleData.body_velocity_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	13, // 16: magothy.protobuf.autopilot.VehicleData.water_current:type_name -> magothy.protobuf.autopilot.WaterCurrent
	0,  // 17: magothy.protobuf.autopilot.VehicleData.water_current_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	0,  // 18: magothy.protobuf.autopilot.VehicleData.water_relative_speed_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	14, // 19: magothy.protobuf.autopilot.VehicleData.fuel_gauge:type_name -> magothy.protobuf.autopilot.FuelGauge
	0,  // 20: magothy.protobuf.autopilot.VehicleData.fuel_gauge_source:type_name -> magothy.protobuf.autopilot.VehicleData.DataSource
	7,  // 21: magothy.protobuf.autopilot.AhrsIf.angular_rate:type_name -> magothy.protobuf.autopilot.AngularRate
	8,  // 22: magothy.protobuf.autopilot.AhrsIf.acceleration:type_name -> magothy.protobuf.autopilot.Acceleration
	9,  // 23: magothy.protobuf.autopilot.AhrsIf.magfield:type_name -> magothy.protobuf.autopilot.MagneticField
	10, // 24: magothy.protobuf.autopilot.AhrsIf.euler:type_name -> magothy.protobuf.autopilot.Euler
	7,  // 25: magothy.protobuf.autopilot.InsIf.angular_rate:type_name -> magothy.protobuf.autopilot.AngularRate
	8,  // 26: magothy.protobuf.autopilot.InsIf.acceleration:type_name -> magothy.protobuf.autopilot.Acceleration
	9,  // 27: magothy.protobuf.autopilot.InsIf.magfield:type_name -> magothy.protobuf.autopilot.MagneticField
	10, // 28: magothy.protobuf.autopilot.InsIf.euler:type_name -> magothy.protobuf.autopilot.Euler
	11, // 29: magothy.protobuf.autopilot.InsIf.body_velocity:type_name -> magothy.protobuf.autopilot.BodyVelocity
	6,  // 30: magothy.protobuf.autopilot.InsIf.position:type_name -> magothy.protobuf.autopilot.Position
	12, // 31: magothy.protobuf.autopilot.InsIf.inertial_velocity:type_name -> magothy.protobuf.autopilot.InertialVelocity
	29, // 32: magothy.protobuf.autopilot.GpsIf.rmc_data:type_name -> magothy.protobuf.autopilot.GpsIf.RmcData
	30, // 33: magothy.protobuf.autopilot.GpsIf.gga_data:type_name -> magothy.protobuf.autopilot.GpsIf.GgaData
	31, // 34: magothy.protobuf.autopilot.ObstacleIf.circle:type_name -> magothy.protobuf.autopilot.ObstacleIf.Circle
	32, // 35: magothy.protobuf.autopilot.ObstacleIf.polygon:type_name -> magothy.protobuf.autopilot.ObstacleIf.Polygon
	2,  // 36: magothy.protobuf.autopilot.ObstacleIf.zone_type:type_name -> magothy.protobuf.autopilot.ObstacleIf.ZoneType
	6,  // 37: magothy.protobuf.autopilot.ObstacleIf.point_of_interest:type_name -> magothy.protobuf.autopilot.Position
	3,  // 38: magothy.protobuf.autopilot.ObstacleIf.intent_type:type_name -> magothy.protobuf.autopilot.ObstacleIf.IntentType
	35, // 39: magothy.protobuf.autopilot.Obstacles.ttag_system:type_name -> google.protobuf.Timestamp
	23, // 40: magothy.protobuf.autopilot.Obstacles.obstacles:type_name -> magothy.protobuf.autopilot.ObstacleIf
	35, // 41: magothy.protobuf.autopilot.Path.ttag_system:type_name -> google.protobuf.Timestamp
	6,  // 42: magothy.protobuf.autopilot.Path.path:type_name -> magothy.protobuf.autopilot.Position
	23, // 43: magothy.protobuf.autopilot.Path.obstacles:type_name -> magothy.protobuf.autopilot.ObstacleIf
	6,  // 44: magothy.protobuf.autopilot.Path.start:type_name -> magothy.protobuf.autopilot.Position
	6,  // 45: magothy.protobuf.autopilot.Path.end_local:type_name -> magothy.protobuf.autopilot.Position
	6,  // 46: magothy.protobuf.autopilot.Path.end_global:type_name -> magothy.protobuf.autopilot.Position
	6,  // 47: magothy.protobuf.autopilot.Path.global_path:type_name -> magothy.protobuf.autopilot.Position
	15, // 48: magothy.protobuf.autopilot.VehicleStateIf.vehicle_data:type_name -> magothy.protobuf.autopilot.VehicleData
	4,  // 49: magothy.protobuf.autopilot.VehicleStateIf.mode:type_name -> magothy.protobuf.autopilot.VehicleStateIf.Mode
	33, // 50: magothy.protobuf.autopilot.VehicleStateIf.health_items:type_name -> magothy.protobuf.autopilot.VehicleStateIf.HealthItem
	34, // 51: magothy.protobuf.autopilot.VehicleStateIf.fault_response:type_name -> magothy.protobuf.autopilot.VehicleStateIf.FaultResponse
	27, // 52: magothy.protobuf.autopilot.MavlinkMission.mission_items:type_name -> magothy.protobuf.autopilot.MavlinkMissionItemInt
	27, // 53: magothy.protobuf.autopilot.MavlinkMission.fence_items:type_name -> magothy.protobuf.autopilot.MavlinkMissionItemInt
	27, // 54: magothy.protobuf.autopilot.MavlinkMission.rally_items:type_name -> magothy.protobuf.autopilot.MavlinkMissionItemInt
	1,  // 55: magothy.protobuf.autopilot.GpsIf.GgaData.fix_quality:type_name -> magothy.protobuf.autopilot.GpsIf.GgaData.FixQuality
	6,  // 56: magothy.protobuf.autopilot.ObstacleIf.Circle.origin:type_name -> magothy.protobuf.autopilot.Position
	6,  // 57: magothy.protobuf.autopilot.ObstacleIf.Polygon.vertices:type_name -> magothy.protobuf.autopilot.Position
	5,  // 58: magothy.protobuf.autopilot.VehicleStateIf.FaultResponse.response_type:type_name -> magothy.protobuf.autopilot.VehicleStateIf.FaultResponseType
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_autopilot_proto_init() }
func file_autopilot_proto_init() {
	if File_autopilot_proto != nil {
		return
	}
	file_autopilot_proto_msgTypes[9].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[10].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[11].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[12].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[13].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[15].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[16].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[17].OneofWrappers = []any{
		(*ObstacleIf_Circle_)(nil),
		(*ObstacleIf_Polygon_)(nil),
	}
	file_autopilot_proto_msgTypes[19].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[20].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[23].OneofWrappers = []any{}
	file_autopilot_proto_msgTypes[24].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_autopilot_proto_rawDesc), len(file_autopilot_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_autopilot_proto_goTypes,
		DependencyIndexes: file_autopilot_proto_depIdxs,
		EnumInfos:         file_autopilot_proto_enumTypes,
		MessageInfos:      file_autopilot_proto_msgTypes,
	}.Build()
	File_autopilot_proto = out.File
	file_autopilot_proto_goTypes = nil
	file_autopilot_proto_depIdxs = nil
}
